import"../../../core/tracing.js";import{PIXELFORMAT_SRGBA as e,PIXELFORMAT_SRGB as t,PIXELFORMAT_111110F as a,PIXELFORMAT_DEPTHSTENCIL as _,PIXELFORMAT_DEPTH as l,PIXELFORMAT_R32F as r,PIXELFORMAT_RGBA32F as s,PIXELFORMAT_RGB32F as i,PIXELFORMAT_RGBA16F as h,PIXELFORMAT_RGB16F as g,PIXELFORMAT_ATC_RGBA as m,PIXELFORMAT_ATC_RGB as o,PIXELFORMAT_ASTC_4x4 as T,PIXELFORMAT_ETC2_RGBA as n,PIXELFORMAT_ETC2_RGB as p,PIXELFORMAT_PVRTC_4BPP_RGBA_1 as E,PIXELFORMAT_PVRTC_4BPP_RGB_1 as F,PIXELFORMAT_PVRTC_2BPP_RGBA_1 as x,PIXELFORMAT_PVRTC_2BPP_RGB_1 as R,PIXELFORMAT_ETC1 as I,PIXELFORMAT_DXT5 as P,PIXELFORMAT_DXT3 as c,PIXELFORMAT_DXT1 as B,PIXELFORMAT_R8_G8_B8_A8 as d,PIXELFORMAT_R8_G8_B8 as A,PIXELFORMAT_R4_G4_B4_A4 as G,PIXELFORMAT_R5_G5_B5_A1 as S,PIXELFORMAT_R5_G6_B5 as C,PIXELFORMAT_L8_A8 as u,PIXELFORMAT_L8 as M,PIXELFORMAT_A8 as U}from"../constants.js";function D(e,t){const a=e.width,_=e.height;if(a>t||_>t){const l=t/Math.max(a,_),r=Math.floor(a*l),s=Math.floor(_*l),i=document.createElement("canvas");i.width=r,i.height=s;return i.getContext("2d").drawImage(e,0,0,a,_,0,0,r,s),i}return e}class N{constructor(){this._glTexture=null,this._glTarget=void 0,this._glFormat=void 0,this._glInternalFormat=void 0,this._glPixelType=void 0}destroy(e){if(this._glTexture){for(let t=0;t<e.textureUnits.length;t++){const a=e.textureUnits[t];for(let e=0;e<a.length;e++)a[e]===this._glTexture&&(a[e]=null)}e.gl.deleteTexture(this._glTexture),this._glTexture=null}}loseContext(){this._glTexture=null}initialize(D,N){const b=D.gl;switch(this._glTexture=b.createTexture(),this._glTarget=N._cubemap?b.TEXTURE_CUBE_MAP:N._volume?b.TEXTURE_3D:b.TEXTURE_2D,N._format){case U:this._glFormat=b.ALPHA,this._glInternalFormat=b.ALPHA,this._glPixelType=b.UNSIGNED_BYTE;break;case M:this._glFormat=b.LUMINANCE,this._glInternalFormat=b.LUMINANCE,this._glPixelType=b.UNSIGNED_BYTE;break;case u:this._glFormat=b.LUMINANCE_ALPHA,this._glInternalFormat=b.LUMINANCE_ALPHA,this._glPixelType=b.UNSIGNED_BYTE;break;case C:this._glFormat=b.RGB,this._glInternalFormat=b.RGB,this._glPixelType=b.UNSIGNED_SHORT_5_6_5;break;case S:this._glFormat=b.RGBA,this._glInternalFormat=b.RGBA,this._glPixelType=b.UNSIGNED_SHORT_5_5_5_1;break;case G:this._glFormat=b.RGBA,this._glInternalFormat=b.RGBA,this._glPixelType=b.UNSIGNED_SHORT_4_4_4_4;break;case A:this._glFormat=b.RGB,this._glInternalFormat=D.webgl2?b.RGB8:b.RGB,this._glPixelType=b.UNSIGNED_BYTE;break;case d:this._glFormat=b.RGBA,this._glInternalFormat=D.webgl2?b.RGBA8:b.RGBA,this._glPixelType=b.UNSIGNED_BYTE;break;case B:this._glFormat=b.RGB,this._glInternalFormat=D.extCompressedTextureS3TC.COMPRESSED_RGB_S3TC_DXT1_EXT;break;case c:this._glFormat=b.RGBA,this._glInternalFormat=D.extCompressedTextureS3TC.COMPRESSED_RGBA_S3TC_DXT3_EXT;break;case P:this._glFormat=b.RGBA,this._glInternalFormat=D.extCompressedTextureS3TC.COMPRESSED_RGBA_S3TC_DXT5_EXT;break;case I:this._glFormat=b.RGB,this._glInternalFormat=D.extCompressedTextureETC1.COMPRESSED_RGB_ETC1_WEBGL;break;case R:this._glFormat=b.RGB,this._glInternalFormat=D.extCompressedTexturePVRTC.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;break;case x:this._glFormat=b.RGBA,this._glInternalFormat=D.extCompressedTexturePVRTC.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;break;case F:this._glFormat=b.RGB,this._glInternalFormat=D.extCompressedTexturePVRTC.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;break;case E:this._glFormat=b.RGBA,this._glInternalFormat=D.extCompressedTexturePVRTC.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;break;case p:this._glFormat=b.RGB,this._glInternalFormat=D.extCompressedTextureETC.COMPRESSED_RGB8_ETC2;break;case n:this._glFormat=b.RGBA,this._glInternalFormat=D.extCompressedTextureETC.COMPRESSED_RGBA8_ETC2_EAC;break;case T:this._glFormat=b.RGBA,this._glInternalFormat=D.extCompressedTextureASTC.COMPRESSED_RGBA_ASTC_4x4_KHR;break;case o:this._glFormat=b.RGB,this._glInternalFormat=D.extCompressedTextureATC.COMPRESSED_RGB_ATC_WEBGL;break;case m:this._glFormat=b.RGBA,this._glInternalFormat=D.extCompressedTextureATC.COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL;break;case g:this._glFormat=b.RGB,D.webgl2?(this._glInternalFormat=b.RGB16F,this._glPixelType=b.HALF_FLOAT):(this._glInternalFormat=b.RGB,this._glPixelType=D.extTextureHalfFloat.HALF_FLOAT_OES);break;case h:this._glFormat=b.RGBA,D.webgl2?(this._glInternalFormat=b.RGBA16F,this._glPixelType=b.HALF_FLOAT):(this._glInternalFormat=b.RGBA,this._glPixelType=D.extTextureHalfFloat.HALF_FLOAT_OES);break;case i:this._glFormat=b.RGB,D.webgl2?this._glInternalFormat=b.RGB32F:this._glInternalFormat=b.RGB,this._glPixelType=b.FLOAT;break;case s:this._glFormat=b.RGBA,D.webgl2?this._glInternalFormat=b.RGBA32F:this._glInternalFormat=b.RGBA,this._glPixelType=b.FLOAT;break;case r:this._glFormat=b.RED,this._glInternalFormat=b.R32F,this._glPixelType=b.FLOAT;break;case l:D.webgl2?(this._glFormat=b.DEPTH_COMPONENT,this._glInternalFormat=b.DEPTH_COMPONENT32F,this._glPixelType=b.FLOAT):(this._glFormat=b.DEPTH_COMPONENT,this._glInternalFormat=b.DEPTH_COMPONENT,this._glPixelType=b.UNSIGNED_SHORT);break;case _:this._glFormat=b.DEPTH_STENCIL,D.webgl2?(this._glInternalFormat=b.DEPTH24_STENCIL8,this._glPixelType=b.UNSIGNED_INT_24_8):(this._glInternalFormat=b.DEPTH_STENCIL,this._glPixelType=D.extDepthTexture.UNSIGNED_INT_24_8_WEBGL);break;case a:this._glFormat=b.RGB,this._glInternalFormat=b.R11F_G11F_B10F,this._glPixelType=b.UNSIGNED_INT_10F_11F_11F_REV;break;case t:this._glFormat=b.RGB,this._glInternalFormat=b.SRGB8,this._glPixelType=b.UNSIGNED_BYTE;break;case e:this._glFormat=b.RGBA,this._glInternalFormat=b.SRGB8_ALPHA8,this._glPixelType=b.UNSIGNED_BYTE}}upload(e,t){const a=e.gl;if(!t._needsUpload&&(t._needsMipmapsUpload&&t._mipmapsUploaded||!t.pot))return;let _,l,r=0;const s=Math.log2(Math.max(t._width,t._height))+1;for(;t._levels[r]||0===r;)if(t._needsUpload||0!==r){if(r&&(!t._needsMipmapsUpload||!t._mipmaps))break;if(_=t._levels[r],1===r&&!t._compressed&&t._levels.length<s&&(a.generateMipmap(this._glTarget),t._mipmapsUploaded=!0),t._cubemap){let s;if(e._isBrowserInterface(_[0]))for(s=0;s<6;s++){if(!t._levelsUpdated[0][s])continue;let l=_[s];e._isImageBrowserInterface(l)&&(l.width>e.maxCubeMapSize||l.height>e.maxCubeMapSize)&&(l=D(l,e.maxCubeMapSize),0===r&&(t._width=l.width,t._height=l.height)),e.setUnpackFlipY(!1),e.setUnpackPremultiplyAlpha(t._premultiplyAlpha),a.texImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+s,r,this._glInternalFormat,this._glFormat,this._glPixelType,l)}else for(l=1/Math.pow(2,r),s=0;s<6;s++){if(!t._levelsUpdated[0][s])continue;const i=_[s];t._compressed?a.compressedTexImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+s,r,this._glInternalFormat,Math.max(t._width*l,1),Math.max(t._height*l,1),0,i):(e.setUnpackFlipY(!1),e.setUnpackPremultiplyAlpha(t._premultiplyAlpha),a.texImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+s,r,this._glInternalFormat,Math.max(t._width*l,1),Math.max(t._height*l,1),0,this._glFormat,this._glPixelType,i))}}else t._volume?(l=1/Math.pow(2,r),t._compressed?a.compressedTexImage3D(a.TEXTURE_3D,r,this._glInternalFormat,Math.max(t._width*l,1),Math.max(t._height*l,1),Math.max(t._depth*l,1),0,_):(e.setUnpackFlipY(!1),e.setUnpackPremultiplyAlpha(t._premultiplyAlpha),a.texImage3D(a.TEXTURE_3D,r,this._glInternalFormat,Math.max(t._width*l,1),Math.max(t._height*l,1),Math.max(t._depth*l,1),0,this._glFormat,this._glPixelType,_))):(e._isBrowserInterface(_)?(e._isImageBrowserInterface(_)&&(_.width>e.maxTextureSize||_.height>e.maxTextureSize)&&(_=D(_,e.maxTextureSize),0===r&&(t._width=_.width,t._height=_.height)),e.setUnpackFlipY(t._flipY),e.setUnpackPremultiplyAlpha(t._premultiplyAlpha),a.texImage2D(a.TEXTURE_2D,r,this._glInternalFormat,this._glFormat,this._glPixelType,_)):(l=1/Math.pow(2,r),t._compressed?a.compressedTexImage2D(a.TEXTURE_2D,r,this._glInternalFormat,Math.max(Math.floor(t._width*l),1),Math.max(Math.floor(t._height*l),1),0,_):(e.setUnpackFlipY(!1),e.setUnpackPremultiplyAlpha(t._premultiplyAlpha),a.texImage2D(a.TEXTURE_2D,r,this._glInternalFormat,Math.max(t._width*l,1),Math.max(t._height*l,1),0,this._glFormat,this._glPixelType,_))),t._mipmapsUploaded=0!==r);r++}else r++;if(t._needsUpload)if(t._cubemap)for(let e=0;e<6;e++)t._levelsUpdated[0][e]=!1;else t._levelsUpdated[0]=!1;!t._compressed&&t._mipmaps&&t._needsMipmapsUpload&&(t.pot||e.webgl2)&&1===t._levels.length&&(a.generateMipmap(this._glTarget),t._mipmapsUploaded=!0),t._gpuSize&&t.adjustVramSizeTracking(e._vram,-t._gpuSize),t._gpuSize=t.gpuSize,t.adjustVramSizeTracking(e._vram,t._gpuSize)}}export{N as WebglTexture};
