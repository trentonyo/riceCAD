import{CULLFACE_NONE as e,PRIMITIVE_TRISTRIP as t,SEMANTIC_POSITION as r,TYPE_FLOAT32 as s,BUFFER_STATIC as o}from"./constants.js";import{VertexBuffer as n}from"./vertex-buffer.js";import{VertexFormat as i}from"./vertex-format.js";import{DeviceCache as p}from"./device-cache.js";const c={type:t,base:0,count:4,indexed:!1},d=new p;function a(t,p,a,h,u,w=!1){const l=t.renderTarget;let g,f,m,x,y,v,T,C;t.setRenderTarget(p),t.updateBegin(),h?(g=h.x,f=h.y,m=h.z,x=h.w):(m=p?p.width:t.width,x=p?p.height:t.height,g=0,f=0),u?(y=u.x,v=u.y,T=u.z,C=u.w):(y=g,v=f,T=m,C=x);const D=t.vx,B=t.vy,S=t.vw,W=t.vh;t.setViewport(g,f,m,x);const j=t.sx,V=t.sy,M=t.sw,R=t.sh;t.setScissor(y,v,T,C);const b=t.getDepthTest(),z=t.getDepthWrite(),A=t.getCullMode(),E=t.writeRed,F=t.writeGreen,G=t.writeBlue,k=t.writeAlpha;t.setDepthTest(!1),t.setDepthWrite(!1),t.setCullMode(e),t.setColorWrite(!0,!0,!0,!0),w||t.setBlending(!1),t.setVertexBuffer(function(e){return d.get(e,(()=>{const t=new i(e,[{semantic:r,components:2,type:s}]),p=new Float32Array(8);return p.set([-1,-1,1,-1,-1,1,1,1]),new n(e,t,4,o,p)}))}(t),0),t.setShader(a),t.draw(c),t.setDepthTest(b),t.setDepthWrite(z),t.setCullMode(A),t.setColorWrite(E,F,G,k),t.updateEnd(),t.setRenderTarget(l),t.updateBegin(),t.setViewport(D,B,S,W),t.setScissor(j,V,M,R)}function h(e,t,r,s,o,n,i=!1){s=s||e.getCopyShader(),e.constantTexSource.setValue(t),a(e,r,s,o,n,i)}export{a as drawQuadWithShader,h as drawTexture};
