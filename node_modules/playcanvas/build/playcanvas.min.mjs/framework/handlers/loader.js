import"../../core/tracing.js";class e{constructor(e){this._handlers={},this._requests={},this._cache={},this._app=e}addHandler(e,s){this._handlers[e]=s,s._loader=this}removeHandler(e){delete this._handlers[e]}getHandler(e){return this._handlers[e]}load(e,s,t,r){const l=this._handlers[s];if(!l){return void t(`No resource handler for asset type: '${s}' when loading [${e}]`)}if(!e)return void this._loadNull(l,t,r);const n=e+s;if(void 0!==this._cache[n])t(null,this._cache[n]);else if(this._requests[n])this._requests[n].push(t);else{this._requests[n]=[t];const s=this,i=function(e,t){e?s._onFailure(n,e):l.load(t,(function(e,i,h){if(s._requests[n])if(e)s._onFailure(n,e);else try{s._onSuccess(n,l.open(t.original,i,r),h)}catch(e){s._onFailure(n,e)}}),r)},h=e.split("?")[0];if(this._app.enableBundles&&this._app.bundles.hasUrl(h)){if(!this._app.bundles.canLoadUrl(h))return void i(`Bundle for ${e} not loaded yet`);this._app.bundles.loadUrl(h,(function(e,s){i(e,{load:s,original:h})}))}else i(null,{load:e,original:r&&r.file.filename||e})}}_loadNull(e,s,t){e.load(null,(function(r,l,n){if(r)s(r);else try{s(null,e.open(null,l,t),n)}catch(e){s(e)}}),t)}_onSuccess(e,s,t){this._cache[e]=s;for(let r=0;r<this._requests[e].length;r++)this._requests[e][r](null,s,t);delete this._requests[e]}_onFailure(e,s){if(console.error(s),this._requests[e]){for(let t=0;t<this._requests[e].length;t++)this._requests[e][t](s);delete this._requests[e]}}open(e,s){const t=this._handlers[e];return t?t.open(null,s):(console.warn("No resource handler found for: "+e),s)}patch(e,s){const t=this._handlers[e.type];t?t.patch&&t.patch(e,s):console.warn("No resource handler found for: "+e.type)}clearCache(e,s){delete this._cache[e+s]}getFromCache(e,s){if(this._cache[e+s])return this._cache[e+s]}enableRetry(e=5){e=Math.max(0,e)||0;for(const s in this._handlers)this._handlers[s].maxRetries=e}disableRetry(){for(const e in this._handlers)this._handlers[e].maxRetries=0}destroy(){this._handlers={},this._requests={},this._cache={}}}export{e as ResourceLoader};
