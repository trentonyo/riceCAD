import{platform as r}from"../../core/platform.js";import{http as e,Http as s}from"../../platform/net/http.js";import{Bundle as t}from"../bundle/bundle.js";import{UntarWorker as o,Untar as n}from"./untar.js";class i{constructor(r){this.handlerType="bundle",this._assets=r.assets,this._worker=null,this.maxRetries=0}load(r,t){"string"==typeof r&&(r={load:r,original:r});const o=this;e.get(r.load,{responseType:s.ResponseType.ARRAY_BUFFER,retry:this.maxRetries>0,maxRetries:this.maxRetries},(function(e,s){if(e)t("Error loading bundle resource "+r.original+": "+e);else try{o._untar(s,t)}catch(e){t("Error loading bundle resource "+r.original+": "+e)}}))}_untar(e,s){const t=this;if(r.workers)t._worker||(t._worker=new o(t._assets.prefix)),t._worker.untar(e,(function(r,e){s(r,e),t._worker.hasPendingRequests()||(t._worker.destroy(),t._worker=null)}));else{const r=new n(e).untar(t._assets.prefix);s(null,r)}}open(r,e){return new t(e)}patch(r,e){}}export{i as BundleHandler};
