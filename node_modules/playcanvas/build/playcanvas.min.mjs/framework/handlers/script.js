import{script as t}from"../script.js";import{ScriptTypes as e}from"../script/script-types.js";class s{constructor(t){this.handlerType="script",this._app=t,this._scripts={},this._cache={}}load(s,a){"string"==typeof s&&(s={load:s,original:s});const r=this;t.app=this._app,this._loadScript(s.load,((s,l,p)=>{if(s)a(s);else if(t.legacy){let t=null;e._types.length&&(t=e._types.pop()),t?this._scripts[l]=t:t=null,a(null,t,p)}else{const t={};for(let s=0;s<e._types.length;s++)t[e._types[s].name]=e._types[s];e._types.length=0,a(null,t,p),delete r._loader._cache[l+"script"]}}))}open(t,e){return e}patch(t,e){}_loadScript(t,e){const s=document.head,a=document.createElement("script");this._cache[t]=a,a.async=!1,a.addEventListener("error",(function(t){e(`Script: ${t.target.src} failed to load`)}),!1);let r=!1;a.onload=a.onreadystatechange=function(){r||this.readyState&&"loaded"!==this.readyState&&"complete"!==this.readyState||(r=!0,e(null,t,a))},a.src=t,s.appendChild(a)}}export{s as ScriptHandler};
