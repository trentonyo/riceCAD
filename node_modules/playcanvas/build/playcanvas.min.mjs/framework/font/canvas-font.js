import{string as t}from"../../core/string.js";import{EventHandler as e}from"../../core/event-handler.js";import{Color as i}from"../../core/math/color.js";import{PIXELFORMAT_R8_G8_B8_A8 as s,FILTER_LINEAR_MIPMAP_LINEAR as n,FILTER_LINEAR as h,ADDRESS_CLAMP_TO_EDGE as o}from"../../platform/graphics/constants.js";import{Texture as r}from"../../platform/graphics/texture.js";class a extends e{constructor(t,e={}){super(),this.type="bitmap",this.app=t,this.intensity=0,this.fontWeight=e.fontWeight||"normal",this.fontSize=parseInt(e.fontSize,10),this.glyphSize=this.fontSize,this.fontName=e.fontName||"Arial",this.color=e.color||new i(1,1,1),this.padding=e.padding||0;const a=e.width>4096?4096:e.width||512,l=e.height>4096?4096:e.height||512,c=document.createElement("canvas");c.height=l,c.width=a;const d=new r(this.app.graphicsDevice,{name:"font",format:s,minFilter:n,magFilter:h,addressU:o,addressV:o,mipmaps:!0});d.setSource(c),this.textures=[d],this.chars="",this.data={}}createTextures(t){const e=this._normalizeCharsSet(t);if(e.length===this.chars.length){for(let t=0;t<e.length;t++)if(e[t]!==this.chars[t])return void this._renderAtlas(e)}else this._renderAtlas(e)}updateTextures(t){const e=this._normalizeCharsSet(t),i=[];for(let t=0;t<e.length;t++){const s=e[t];this.data.chars[s]||i.push(s)}i.length>0&&this._renderAtlas(this.chars.concat(i))}destroy(){for(let t=0;t<this.textures.length;t++)this.textures[t].destroy();this.chars=null,this.color=null,this.data=null,this.fontName=null,this.fontSize=null,this.glyphSize=null,this.intensity=null,this.textures=null,this.type=null,this.fontWeight=null}_getAndClearContext(t,e){const i=t.width,s=t.height,n=t.getContext("2d",{alpha:!0});return n.clearRect(0,0,i,s),n.fillStyle=e,n.fillRect(0,0,i,s),n}_colorToRgbString(t,e){let i;const s=Math.round(255*t.r),n=Math.round(255*t.g),h=Math.round(255*t.b);return i=e?`rgba(${s}, ${n}, ${h}, ${t.a})`:`rgb(${s}, ${n}, ${h})`,i}renderCharacter(t,e,i,s,n){t.fillStyle=n,t.fillText(e,i,s)}_renderAtlas(e){this.chars=e;let i=1,a=this.textures[i-1].getSource();const l=a.width,c=a.height,d=this._colorToRgbString(this.color,!1),g=this.color.a;this.color.a=1/255;const p=this._colorToRgbString(this.color,!0);this.color.a=g;const f="center",m="alphabetic";let u=this._getAndClearContext(a,p);u.font=this.fontWeight+" "+this.fontSize.toString()+"px "+this.fontName,u.textAlign=f,u.textBaseline=m,this.data=this._createJson(this.chars,this.fontName,l,c);const x=t.getSymbols(this.chars.join("")),y=this.textures.length;let S=0,z=0;const C={};for(let t=0;t<x.length;t++){const e=x[t];C[e]=this._getTextMetrics(e),S=Math.max(S,C[e].height),z=Math.max(z,C[e].descent)}this.glyphSize=Math.max(this.glyphSize,S);const _=this.glyphSize+2*this.padding,b=this.glyphSize+2*this.padding,w=this.glyphSize/2+this.padding,v=b-z-this.padding;let T=0,A=0;for(let e=0;e<x.length;e++){const g=x[e],S=t.getCodePoint(x[e]);let M=this.fontSize;u.font=this.fontWeight+" "+M.toString()+"px "+this.fontName,u.textAlign=f,u.textBaseline=m;let N=u.measureText(g).width;N>M&&(M=this.fontSize*this.fontSize/N,u.font=this.fontWeight+" "+M.toString()+"px "+this.fontName,N=this.fontSize),this.renderCharacter(u,g,T+w,A+v,d);const j=this.padding+(this.glyphSize-N)/2,$=-this.padding+C[g].descent-z,W=N;if(this._addChar(this.data,g,S,T,A,_,b,j,$,W,i-1,l,c),T+=_,T+_>l&&(T=0,A+=b,A+b>c))if(this.textures[i-1].upload(),i++,A=0,i>y){a=document.createElement("canvas"),a.height=c,a.width=l,u=this._getAndClearContext(a,p);const t=new r(this.app.graphicsDevice,{format:s,mipmaps:!0,name:"font-atlas"});t.setSource(a),t.minFilter=n,t.magFilter=h,t.addressU=o,t.addressV=o,this.textures.push(t)}else a=this.textures[i-1].getSource(),u=this._getAndClearContext(a,p)}if(this.textures[i-1].upload(),i<y){for(let t=i;t<y;t++)this.textures[t].destroy();this.textures.splice(i)}this.fire("render")}_createJson(t,e,i,s){return{version:3,intensity:this.intensity,info:{face:e,width:i,height:s,maps:[{width:i,height:s}]},chars:{}}}_addChar(t,e,i,s,n,h,o,r,a,l,c,d,g){t.info.maps.length<c+1&&t.info.maps.push({width:d,height:g});const p=this.fontSize/32;t.chars[e]={id:i,letter:e,x:s,y:n,width:h,height:o,xadvance:l/p,xoffset:r/p,yoffset:(a+this.padding)/p,scale:p,range:1,map:c,bounds:[0,0,h/p,o/p]}}_normalizeCharsSet(e){const i=this.app.systems.element.getUnicodeConverter();i&&(e=i(e));const s={},n=t.getSymbols(e);for(let t=0;t<n.length;t++){const e=n[t];s[e]||(s[e]=e)}return Object.keys(s).sort()}_getTextMetrics(t){const e=document.createElement("span");e.id="content-span",e.innerHTML=t;const i=document.createElement("div");i.id="content-block",i.style.display="inline-block",i.style.width="1px",i.style.height="0px";const s=document.createElement("div");s.appendChild(e),s.appendChild(i),s.style.font=this.fontSize+"px "+this.fontName;document.body.appendChild(s);let n=-1,h=-1,o=-1;try{i.style["vertical-align"]="baseline",n=i.offsetTop-e.offsetTop,i.style["vertical-align"]="bottom",o=i.offsetTop-e.offsetTop,h=o-n}finally{document.body.removeChild(s)}return{ascent:n,descent:h,height:o}}}export{a as CanvasFont};
