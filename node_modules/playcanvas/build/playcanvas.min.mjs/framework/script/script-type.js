import"../../core/tracing.js";import{EventHandler as t}from"../../core/event-handler.js";import{SCRIPT_INITIALIZE as i,SCRIPT_POST_INITIALIZE as e}from"./constants.js";import{ScriptAttributes as s}from"./script-attributes.js";const n=new RegExp("^\\s*function(?:\\s|\\s*\\/\\*.*\\*\\/\\s*)+([^\\(\\s\\/]*)\\s*");class r extends t{constructor(t){super(),this.app=void 0,this.entity=void 0,this._enabled=void 0,this._enabledOld=void 0,this._initialized=void 0,this._postInitialized=void 0,this.__destroyed=void 0,this.__attributes=void 0,this.__attributesRaw=void 0,this.__scriptType=void 0,this.__executionOrder=void 0,this.initScriptType(t)}set enabled(t){this._enabled=!!t,this.enabled!==this._enabledOld&&(this._enabledOld=this.enabled,this.fire(this.enabled?"enable":"disable"),this.fire("state",this.enabled),!this._initialized&&this.enabled&&(this._initialized=!0,this.__initializeAttributes(!0),this.initialize&&this.entity.script._scriptMethod(this,i)),this._initialized&&!this._postInitialized&&this.enabled&&!this.entity.script._beingEnabled&&(this._postInitialized=!0,this.postInitialize&&this.entity.script._scriptMethod(this,e)))}get enabled(){return this._enabled&&!this._destroyed&&this.entity.script.enabled&&this.entity.enabled}initScriptType(t){const i=this.constructor;this.app=t.app,this.entity=t.entity,this._enabled="boolean"!=typeof t.enabled||t.enabled,this._enabledOld=this.enabled,this.__destroyed=!1,this.__attributes={},this.__attributesRaw=t.attributes||{},this.__scriptType=i,this.__executionOrder=-1}static __getScriptName(t){if("function"!=typeof t)return;if("name"in Function.prototype)return t.name;if(t===Function||t===Function.prototype.constructor)return"Function";const i=(""+t).match(n);return i?i[1]:void 0}static get scriptName(){return this.__name}static get attributes(){return this.hasOwnProperty("__attributes")||(this.__attributes=new s(this)),this.__attributes}__initializeAttributes(t){if(t||this.__attributesRaw){for(const t in this.__scriptType.attributes.index)this.__attributesRaw&&this.__attributesRaw.hasOwnProperty(t)?this[t]=this.__attributesRaw[t]:this.__attributes.hasOwnProperty(t)||(this.__scriptType.attributes.index[t].hasOwnProperty("default")?this[t]=this.__scriptType.attributes.index[t].default:this[t]=null);this.__attributesRaw=null}}static extend(t){for(const i in t)t.hasOwnProperty(i)&&(this.prototype[i]=t[i])}}r.__name=null;export{r as ScriptType};
