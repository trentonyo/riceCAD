class e{static loadScript(e,t){const l=document.createElement("script");l.setAttribute("src",e),l.onload=()=>{t(null)},l.onerror=()=>{t(`Failed to load script='${e}'`)},document.body.appendChild(l)}static loadWasm(t,l,n){const i=e.wasmSupported()&&l.glueUrl&&l.wasmUrl?l.glueUrl:l.fallbackUrl;i?e.loadScript(i,(e=>{if(e)n(e,null);else{const e=window[t];window[t]=void 0,e({locateFile:()=>l.wasmUrl,onAbort:()=>{n("wasm module aborted.")}}).then((e=>{n(null,e)}))}})):n("No supported wasm modules found.",null)}static getModule(t){return e.modules.hasOwnProperty(t)||(e.modules[t]={config:null,initializing:!1,instance:null,callbacks:[]}),e.modules[t]}static initialize(t,l){if(l.initializing)return;const n=l.config;(n.glueUrl||n.wasmUrl||n.fallbackUrl)&&(l.initializing=!0,e.loadWasm(t,n,((e,i)=>{e?n.errorHandler?n.errorHandler(e):console.error(`failed to initialize module=${t} error=${e}`):(l.instance=i,l.callbacks.forEach((e=>{e(i)})))})))}}e.modules={},e.wasmSupported=(e=>{const t={};let l=t;return()=>(l===t&&(l=e()),l)})((()=>{try{if("object"==typeof WebAssembly&&"function"==typeof WebAssembly.instantiate){const e=new WebAssembly.Module(Uint8Array.of(0,97,115,109,1,0,0,0));if(e instanceof WebAssembly.Module)return new WebAssembly.Instance(e)instanceof WebAssembly.Instance}}catch(e){}return!1}));class t{static setConfig(t,l){const n=e.getModule(t);n.config=l,n.callbacks.length>0&&e.initialize(t,n)}static getInstance(t,l){const n=e.getModule(t);n.instance?l(n.instance):(n.callbacks.push(l),n.config&&e.initialize(t,n))}}export{t as WasmModule};
