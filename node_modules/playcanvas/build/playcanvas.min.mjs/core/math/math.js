const n={DEG_TO_RAD:Math.PI/180,RAD_TO_DEG:180/Math.PI,clamp:function(n,t,r){return n>=r?r:n<=t?t:n},intToBytes24:function(n){return[n>>16&255,n>>8&255,255&n]},intToBytes32:function(n){return[n>>24&255,n>>16&255,n>>8&255,255&n]},bytesToInt24:function(n,t,r){return n.length&&(r=n[2],t=n[1],n=n[0]),n<<16|t<<8|r},bytesToInt32:function(n,t,r,o){return n.length&&(o=n[3],r=n[2],t=n[1],n=n[0]),(n<<24|t<<16|r<<8|o)>>>0},lerp:function(t,r,o){return t+(r-t)*n.clamp(o,0,1)},lerpAngle:function(t,r,o){return r-t>180&&(r-=360),r-t<-180&&(r+=360),n.lerp(t,r,n.clamp(o,0,1))},powerOfTwo:function(n){return 0!==n&&!(n&n-1)},nextPowerOfTwo:function(n){return n--,n|=n>>1,n|=n>>2,n|=n>>4,n|=n>>8,n|=n>>16,++n},nearestPowerOfTwo:function(n){return Math.pow(2,Math.round(Math.log(n)/Math.log(2)))},random:function(n,t){const r=t-n;return Math.random()*r+n},smoothstep:function(n,t,r){return r<=n?0:r>=t?1:(r=(r-n)/(t-n))*r*(3-2*r)},smootherstep:function(n,t,r){return r<=n?0:r>=t?1:(r=(r-n)/(t-n))*r*r*(r*(6*r-15)+10)},roundUp:function(n,t){return 0===t?n:Math.ceil(n/t)*t},between:function(n,t,r,o){const e=Math.min(t,r),u=Math.max(t,r);return o?n>=e&&n<=u:n>e&&n<u}};export{n as math};
