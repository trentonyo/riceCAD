import{math as t}from"./math.js";class e{constructor(t=0,e=0,r=0,s=1){const i=t.length;3===i||4===i?(this.r=t[0],this.g=t[1],this.b=t[2],this.a=void 0!==t[3]?t[3]:1):(this.r=t,this.g=e,this.b=r,this.a=s)}clone(){return new(0,this.constructor)(this.r,this.g,this.b,this.a)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this.a=t.a,this}equals(t){return this.r===t.r&&this.g===t.g&&this.b===t.b&&this.a===t.a}set(t,e,r,s=1){return this.r=t,this.g=e,this.b=r,this.a=s,this}lerp(t,e,r){return this.r=t.r+r*(e.r-t.r),this.g=t.g+r*(e.g-t.g),this.b=t.b+r*(e.b-t.b),this.a=t.a+r*(e.a-t.a),this}fromString(e){const r=parseInt(e.replace("#","0x"),16);let s;return e.length>7?s=t.intToBytes32(r):(s=t.intToBytes24(r),s[3]=255),this.set(s[0]/255,s[1]/255,s[2]/255,s[3]/255),this}toString(t){let e="#"+((1<<24)+(Math.round(255*this.r)<<16)+(Math.round(255*this.g)<<8)+Math.round(255*this.b)).toString(16).slice(1);if(!0===t){const t=Math.round(255*this.a).toString(16);this.a<16/255?e+="0"+t:e+=t}return e}}e.BLACK=Object.freeze(new e(0,0,0,1)),e.BLUE=Object.freeze(new e(0,0,1,1)),e.CYAN=Object.freeze(new e(0,1,1,1)),e.GRAY=Object.freeze(new e(.5,.5,.5,1)),e.GREEN=Object.freeze(new e(0,1,0,1)),e.MAGENTA=Object.freeze(new e(1,0,1,1)),e.RED=Object.freeze(new e(1,0,0,1)),e.WHITE=Object.freeze(new e(1,1,1,1)),e.YELLOW=Object.freeze(new e(1,1,0,1));export{e as Color};
