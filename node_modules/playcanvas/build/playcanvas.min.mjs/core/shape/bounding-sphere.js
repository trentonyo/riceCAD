import"../tracing.js";import{Vec3 as t}from"../math/vec3.js";const r=new t,s=new t;class n{constructor(r=new t,s=.5){this.center=r,this.radius=s}containsPoint(t){const s=r.sub2(t,this.center).lengthSq(),n=this.radius;return s<n*n}intersectsRay(t,n){const i=r.copy(t.origin).sub(this.center),e=i.dot(s.copy(t.direction).normalize()),c=i.dot(i)-this.radius*this.radius;if(c>0&&e>0)return!1;const o=e*e-c;if(o<0)return!1;const a=Math.abs(-e-Math.sqrt(o));return n&&n.copy(t.direction).mulScalar(a).add(t.origin),!0}intersectsBoundingSphere(t){r.sub2(t.center,this.center);const s=t.radius+this.radius;return r.lengthSq()<=s*s}}export{n as BoundingSphere};
