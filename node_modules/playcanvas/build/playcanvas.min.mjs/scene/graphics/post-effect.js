import{SEMANTIC_POSITION as e,TYPE_FLOAT32 as t,BUFFER_STATIC as r,CULLFACE_NONE as s,PRIMITIVE_TRISTRIP as n}from"../../platform/graphics/constants.js";import{VertexBuffer as i}from"../../platform/graphics/vertex-buffer.js";import{VertexFormat as o}from"../../platform/graphics/vertex-format.js";const p={type:n,base:0,count:4,indexed:!1};class h{constructor(e){this.device=e,this.shader=null,this.vertexBuffer=d(e),this.needsDepthBuffer=!1,this.depthMap=null}render(e,t,r){}}function d(s){const n=new o(s,[{semantic:e,components:2,type:t}]),p=new Float32Array([-1,-1,1,-1,-1,1,1,1]);return new i(s,n,4,r,p.buffer)}function a(e,t,r,n,i){const o=e.getRenderTarget();e.setRenderTarget(t),e.updateBegin();let h=t?t.width:e.width,d=t?t.height:e.height,a=0,l=0;i&&(a=i.x*h,l=i.y*d,h*=i.z,d*=i.w);const c=e.vx,f=e.vy,u=e.vw,g=e.vh;e.setViewport(a,l,h,d);const w=e.sx,m=e.sy,x=e.sw,B=e.sh;e.setScissor(a,l,h,d);const v=e.getBlending(),D=e.getDepthTest(),y=e.getDepthWrite(),T=e.getCullMode(),C=e.writeRed,W=e.writeGreen,M=e.writeBlue,R=e.writeAlpha;e.setBlending(!1),e.setDepthTest(!1),e.setDepthWrite(!1),e.setCullMode(s),e.setColorWrite(!0,!0,!0,!0),e.setVertexBuffer(r,0),e.setShader(n),e.draw(p),e.setBlending(v),e.setDepthTest(D),e.setDepthWrite(y),e.setCullMode(T),e.setColorWrite(C,W,M,R),e.updateEnd(),e.setRenderTarget(o),e.updateBegin(),e.setViewport(c,f,u,g),e.setScissor(w,m,x,B)}export{h as PostEffect,d as createFullscreenQuad,a as drawFullscreenQuad};
