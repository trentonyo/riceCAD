var e="\nvec3 fixSeams(vec3 vec, float mipmapIndex) {\n    vec3 avec = abs(vec);\n    float scale = 1.0 - exp2(mipmapIndex) / 128.0;\n    float M = max(max(avec.x, avec.y), avec.z);\n    if (avec.x != M) vec.x *= scale;\n    if (avec.y != M) vec.y *= scale;\n    if (avec.z != M) vec.z *= scale;\n    return vec;\n}\n\nvec3 fixSeams(vec3 vec) {\n    vec3 avec = abs(vec);\n    float scale = 1.0 - 1.0 / 128.0;\n    float M = max(max(avec.x, avec.y), avec.z);\n    if (avec.x != M) vec.x *= scale;\n    if (avec.y != M) vec.y *= scale;\n    if (avec.z != M) vec.z *= scale;\n    return vec;\n}\n\nvec3 fixSeamsStatic(vec3 vec, float invRecMipSize) {\n    vec3 avec = abs(vec);\n    float scale = invRecMipSize;\n    float M = max(max(avec.x, avec.y), avec.z);\n    if (avec.x != M) vec.x *= scale;\n    if (avec.y != M) vec.y *= scale;\n    if (avec.z != M) vec.z *= scale;\n    return vec;\n}\n\nvec3 calcSeam(vec3 vec) {\n    vec3 avec = abs(vec);\n    float M = max(avec.x, max(avec.y, avec.z));\n    return vec3(avec.x != M ? 1.0 : 0.0,\n                avec.y != M ? 1.0 : 0.0,\n                avec.z != M ? 1.0 : 0.0);\n}\n\nvec3 applySeam(vec3 vec, vec3 seam, float scale) {\n    return vec * (seam * -scale + vec3(1.0));\n}\n";export{e as default};
