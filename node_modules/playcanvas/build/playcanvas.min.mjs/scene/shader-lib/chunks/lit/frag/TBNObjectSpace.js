var e="\nvoid getTBN() {\n\n    vec3 B = cross(dVertexNormalW, vObjectSpaceUpW);\n    vec3 T = cross(dVertexNormalW, B);\n\n    if (dot(B,B)==0.0) // deal with case when vObjectSpaceUpW dVertexNormalW are parallel\n    {\n        float major=max(max(dVertexNormalW.x, dVertexNormalW.y),dVertexNormalW.z);\n\n        if (dVertexNormalW.x==major)\n        {\n            B=cross(dVertexNormalW, vec3(0,1,0));\n            T=cross(dVertexNormalW, B);\n        }\n        else if (dVertexNormalW.y==major)\n        {\n            B=cross(dVertexNormalW, vec3(0,0,1));\n            T=cross(dVertexNormalW, B);\n        }\n        else if (dVertexNormalW.z==major)\n        {\n            B=cross(dVertexNormalW, vec3(1,0,0));\n            T=cross(dVertexNormalW, B);\n        }\n    }\n\n    dTBN = mat3(normalize(T), normalize(B), normalize(dVertexNormalW));\n}\n";export{e as default};
