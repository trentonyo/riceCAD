import{SEMANTIC_POSITION as e,SEMANTIC_BLENDWEIGHT as r,SEMANTIC_BLENDINDICES as o,SEMANTIC_COLOR as t,SEMANTIC_TEXCOORD0 as n}from"../../../platform/graphics/constants.js";import{ShaderUtils as a}from"../../../platform/graphics/shader-utils.js";import{shaderChunks as s}from"../chunks/chunks.js";import{SHADER_DEPTH as i,SHADER_PICK as f}from"../../constants.js";import{ShaderPass as p}from"../../shader-pass.js";import{skinCode as v,begin as l,end as c,fogCode as g}from"./common.js";const m={generateKey:function(e){let r="basic";return e.fog&&(r+="_fog"),e.alphaTest&&(r+="_atst"),e.vertexColors&&(r+="_vcol"),e.diffuseMap&&(r+="_diff"),e.skin&&(r+="_skin"),e.screenSpace&&(r+="_ss"),e.useInstancing&&(r+="_inst"),e.useMorphPosition&&(r+="_morphp"),e.useMorphNormal&&(r+="_morphn"),e.useMorphTextureBased&&(r+="_morpht"),r+="_"+e.pass,r},createShaderDefinition:function(m,_){const u={vertex_position:e};_.skin&&(u.vertex_boneWeights=r,u.vertex_boneIndices=o),_.vertexColors&&(u.vertex_color=t),_.diffuseMap&&(u.vertex_texCoord0=n);const d=p.getPassShaderDefine(_.pass);let x=d;x+=s.transformDeclVS,_.skin?(x+=v(m),x+=s.transformSkinnedVS):x+=s.transformVS,_.vertexColors&&(x+="attribute vec4 vertex_color;\n",x+="varying vec4 vColor;\n"),_.diffuseMap&&(x+="attribute vec2 vertex_texCoord0;\n",x+="varying vec2 vUv0;\n"),_.pass===i&&(x+="varying float vDepth;\n",x+="#ifndef VIEWMATRIX\n",x+="#define VIEWMATRIX\n",x+="uniform mat4 matrix_view;\n",x+="#endif\n",x+="#ifndef CAMERAPLANES\n",x+="#define CAMERAPLANES\n",x+="uniform vec4 camera_params;\n\n",x+="#endif\n"),x+=l(),x+="   gl_Position = getPosition();\n",_.pass===i&&(x+="    vDepth = -(matrix_view * vec4(getWorldPosition(),1.0)).z * camera_params.x;\n"),_.vertexColors&&(x+="    vColor = vertex_color;\n"),_.diffuseMap&&(x+="    vUv0 = vertex_texCoord0;\n"),x+=c();let h=d;return _.vertexColors?h+="varying vec4 vColor;\n":h+="uniform vec4 uColor;\n",_.diffuseMap&&(h+="varying vec2 vUv0;\n",h+="uniform sampler2D texture_diffuseMap;\n"),_.fog&&(h+=g(_.fog)),_.alphaTest&&(h+=s.alphaTestPS),_.pass===i&&(h+="varying float vDepth;\n",h+=s.packDepthPS),h+=l(),_.vertexColors?h+="    gl_FragColor = vColor;\n":h+="    gl_FragColor = uColor;\n",_.diffuseMap&&(h+="    gl_FragColor *= texture2D(texture_diffuseMap, vUv0);\n"),_.alphaTest&&(h+="   alphaTest(gl_FragColor.a);\n"),_.pass!==f&&(_.pass===i?h+="    gl_FragColor = packFloat(vDepth);\n":_.fog&&(h+="   glFragColor.rgb = addFog(gl_FragColor.rgb);\n")),h+=c(),a.createDefinition(m,{name:"BasicShader",attributes:u,vertexCode:x,fragmentCode:h})}};export{m as basic};
