import{LIGHTTYPE_OMNI as a}from"../constants.js";import{ShadowMap as t}from"./shadow-map.js";class s{constructor(){this.shadowMapCache=new Map}destroy(){this.clear(),this.shadowMapCache=null}clear(){this.shadowMapCache.forEach((a=>{a.forEach((a=>{a.destroy()}))})),this.shadowMapCache.clear()}getKey(t){return`${t._type===a}-${t._shadowType}-${t._shadowResolution}`}get(a,s){const e=this.getKey(s),h=this.shadowMapCache.get(e);if(h&&h.length)return h.pop();const o=t.create(a,s);return o.cached=!0,o}add(a,t){const s=this.getKey(a),e=this.shadowMapCache.get(s);e?e.push(t):this.shadowMapCache.set(s,[t])}}export{s as ShadowMapCache};
