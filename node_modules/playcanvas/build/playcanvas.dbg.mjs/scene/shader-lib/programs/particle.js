/**
 * @license
 * PlayCanvas Engine v1.58.0 revision 6672f604c (DEBUG PROFILER)
 * Copyright 2011-2022 PlayCanvas Ltd. All rights reserved.
 */
import { ShaderUtils } from '../../../platform/graphics/shader-utils.js';
import { BLEND_NORMAL, BLEND_ADDITIVE, BLEND_MULTIPLICATIVE } from '../../constants.js';
import { shaderChunks } from '../chunks/chunks.js';
import { gammaCode, tonemapCode } from './common.js';

const particle = {
  generateKey: function (options) {
    let key = "particle";
    for (const prop in options) {
      if (options.hasOwnProperty(prop)) {
        key += options[prop];
      }
    }
    return key;
  },
  _animTex: function (options) {
    let vshader = "";
    vshader += options.animTexLoop ? shaderChunks.particleAnimFrameLoopVS : shaderChunks.particleAnimFrameClampVS;
    vshader += shaderChunks.particleAnimTexVS;
    return vshader;
  },
  createShaderDefinition: function (device, options) {
    let fshader = '#define PARTICLE\n';
    let vshader = "#define VERTEXSHADER\n";
    if (options.mesh) vshader += "#define USE_MESH\n";
    if (options.localSpace) vshader += "#define LOCAL_SPACE\n";
    if (options.screenSpace) vshader += "#define SCREEN_SPACE\n";
    if (options.animTex) vshader += "\nuniform vec2 animTexTilesParams;\n";
    if (options.animTex) vshader += "\nuniform vec4 animTexParams;\n";
    if (options.animTex) vshader += "\nuniform vec2 animTexIndexParams;\n";
    if (options.normal === 2) vshader += "\nvarying mat3 ParticleMat;\n";
    if (options.normal === 1) vshader += "\nvarying vec3 Normal;\n";
    if (options.soft) vshader += "\nvarying float vDepth;\n";
    const faceVS = options.customFace ? shaderChunks.particle_customFaceVS : shaderChunks.particle_billboardVS;
    if (!options.useCpu) {
      vshader += shaderChunks.particle_initVS;
      vshader += options.pack8 ? shaderChunks.particleInputRgba8PS : shaderChunks.particleInputFloatPS;
      if (options.soft > 0) vshader += shaderChunks.screenDepthPS;
      vshader += shaderChunks.particleVS;
      if (options.localSpace) vshader += shaderChunks.particle_localShiftVS;
      if (options.animTex) vshader += this._animTex(options);
      if (options.wrap) vshader += shaderChunks.particle_wrapVS;
      if (options.alignToMotion) vshader += shaderChunks.particle_pointAlongVS;
      vshader += options.mesh ? shaderChunks.particle_meshVS : faceVS;
      if (options.normal === 1) vshader += shaderChunks.particle_normalVS;
      if (options.normal === 2) vshader += shaderChunks.particle_TBNVS;
      if (options.stretch > 0.0) vshader += shaderChunks.particle_stretchVS;
      vshader += shaderChunks.particle_endVS;
      if (options.soft > 0) vshader += shaderChunks.particle_softVS;
    } else {
      if (options.soft > 0) vshader += shaderChunks.screenDepthPS;
      vshader += shaderChunks.particle_cpuVS;
      if (options.localSpace) vshader += shaderChunks.particle_localShiftVS;
      if (options.animTex) vshader += this._animTex(options);
      if (options.alignToMotion) vshader += shaderChunks.particle_pointAlongVS;
      vshader += options.mesh ? shaderChunks.particle_meshVS : faceVS;
      if (options.normal === 1) vshader += shaderChunks.particle_normalVS;
      if (options.normal === 2) vshader += shaderChunks.particle_TBNVS;
      if (options.stretch > 0.0) vshader += shaderChunks.particle_stretchVS;
      vshader += shaderChunks.particle_cpu_endVS;
      if (options.soft > 0) vshader += shaderChunks.particle_softVS;
    }
    vshader += "}\n";
    if (options.normal > 0) {
      if (options.normal === 1) {
        fshader += "\nvarying vec3 Normal;\n";
      } else if (options.normal === 2) {
        fshader += "\nvarying mat3 ParticleMat;\n";
      }
      fshader += "\nuniform vec3 lightCube[6];\n";
    }
    if (options.soft) fshader += "\nvarying float vDepth;\n";
    if (options.normal === 0 && options.fog === "none") options.srgb = false;
    fshader += shaderChunks.decodePS;
    fshader += gammaCode(options.gamma);
    fshader += tonemapCode(options.toneMap);
    if (options.fog === 'linear') {
      fshader += shaderChunks.fogLinearPS;
    } else if (options.fog === 'exp') {
      fshader += shaderChunks.fogExpPS;
    } else if (options.fog === 'exp2') {
      fshader += shaderChunks.fogExp2PS;
    } else {
      fshader += shaderChunks.fogNonePS;
    }
    if (options.normal === 2) fshader += "\nuniform sampler2D normalMap;\n";
    if (options.soft > 0) fshader += shaderChunks.screenDepthPS;
    fshader += shaderChunks.particlePS;
    if (options.soft > 0) fshader += shaderChunks.particle_softPS;
    if (options.normal === 1) fshader += "\nvec3 normal = Normal;\n";
    if (options.normal === 2) fshader += shaderChunks.particle_normalMapPS;
    if (options.normal > 0) fshader += options.halflambert ? shaderChunks.particle_halflambertPS : shaderChunks.particle_lambertPS;
    if (options.normal > 0) fshader += shaderChunks.particle_lightingPS;
    if (options.blend === BLEND_NORMAL) {
      fshader += shaderChunks.particle_blendNormalPS;
    } else if (options.blend === BLEND_ADDITIVE) {
      fshader += shaderChunks.particle_blendAddPS;
    } else if (options.blend === BLEND_MULTIPLICATIVE) {
      fshader += shaderChunks.particle_blendMultiplyPS;
    }
    fshader += shaderChunks.particle_endPS;
    return ShaderUtils.createDefinition(device, {
      vertexCode: vshader,
      fragmentCode: fshader
    });
  }
};

export { particle };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFydGljbGUuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9zY2VuZS9zaGFkZXItbGliL3Byb2dyYW1zL3BhcnRpY2xlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNoYWRlclV0aWxzIH0gZnJvbSAnLi4vLi4vLi4vcGxhdGZvcm0vZ3JhcGhpY3Mvc2hhZGVyLXV0aWxzLmpzJztcbmltcG9ydCB7IEJMRU5EX0FERElUSVZFLCBCTEVORF9NVUxUSVBMSUNBVElWRSwgQkxFTkRfTk9STUFMIH0gZnJvbSAnLi4vLi4vY29uc3RhbnRzLmpzJztcbmltcG9ydCB7IHNoYWRlckNodW5rcyB9IGZyb20gJy4uL2NodW5rcy9jaHVua3MuanMnO1xuXG5pbXBvcnQgeyBnYW1tYUNvZGUsIHRvbmVtYXBDb2RlIH0gZnJvbSAnLi9jb21tb24uanMnO1xuXG5jb25zdCBwYXJ0aWNsZSA9IHtcbiAgICBnZW5lcmF0ZUtleTogZnVuY3Rpb24gKG9wdGlvbnMpIHtcbiAgICAgICAgbGV0IGtleSA9IFwicGFydGljbGVcIjtcbiAgICAgICAgZm9yIChjb25zdCBwcm9wIGluIG9wdGlvbnMpIHtcbiAgICAgICAgICAgIGlmIChvcHRpb25zLmhhc093blByb3BlcnR5KHByb3ApKSB7XG4gICAgICAgICAgICAgICAga2V5ICs9IG9wdGlvbnNbcHJvcF07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGtleTtcbiAgICB9LFxuXG4gICAgX2FuaW1UZXg6IGZ1bmN0aW9uIChvcHRpb25zKSB7XG4gICAgICAgIGxldCB2c2hhZGVyID0gXCJcIjtcbiAgICAgICAgdnNoYWRlciArPSBvcHRpb25zLmFuaW1UZXhMb29wID8gc2hhZGVyQ2h1bmtzLnBhcnRpY2xlQW5pbUZyYW1lTG9vcFZTIDogc2hhZGVyQ2h1bmtzLnBhcnRpY2xlQW5pbUZyYW1lQ2xhbXBWUztcbiAgICAgICAgdnNoYWRlciArPSBzaGFkZXJDaHVua3MucGFydGljbGVBbmltVGV4VlM7XG4gICAgICAgIHJldHVybiB2c2hhZGVyO1xuICAgIH0sXG5cbiAgICBjcmVhdGVTaGFkZXJEZWZpbml0aW9uOiBmdW5jdGlvbiAoZGV2aWNlLCBvcHRpb25zKSB7XG4gICAgICAgIGxldCBmc2hhZGVyID0gJyNkZWZpbmUgUEFSVElDTEVcXG4nO1xuICAgICAgICBsZXQgdnNoYWRlciA9IFwiI2RlZmluZSBWRVJURVhTSEFERVJcXG5cIjtcblxuICAgICAgICBpZiAob3B0aW9ucy5tZXNoKSB2c2hhZGVyICs9IFwiI2RlZmluZSBVU0VfTUVTSFxcblwiO1xuICAgICAgICBpZiAob3B0aW9ucy5sb2NhbFNwYWNlKSB2c2hhZGVyICs9IFwiI2RlZmluZSBMT0NBTF9TUEFDRVxcblwiO1xuICAgICAgICBpZiAob3B0aW9ucy5zY3JlZW5TcGFjZSkgdnNoYWRlciArPSBcIiNkZWZpbmUgU0NSRUVOX1NQQUNFXFxuXCI7XG5cbiAgICAgICAgaWYgKG9wdGlvbnMuYW5pbVRleCkgdnNoYWRlciArPSBcIlxcbnVuaWZvcm0gdmVjMiBhbmltVGV4VGlsZXNQYXJhbXM7XFxuXCI7XG4gICAgICAgIGlmIChvcHRpb25zLmFuaW1UZXgpIHZzaGFkZXIgKz0gXCJcXG51bmlmb3JtIHZlYzQgYW5pbVRleFBhcmFtcztcXG5cIjtcbiAgICAgICAgaWYgKG9wdGlvbnMuYW5pbVRleCkgdnNoYWRlciArPSBcIlxcbnVuaWZvcm0gdmVjMiBhbmltVGV4SW5kZXhQYXJhbXM7XFxuXCI7XG4gICAgICAgIGlmIChvcHRpb25zLm5vcm1hbCA9PT0gMikgdnNoYWRlciArPSBcIlxcbnZhcnlpbmcgbWF0MyBQYXJ0aWNsZU1hdDtcXG5cIjtcbiAgICAgICAgaWYgKG9wdGlvbnMubm9ybWFsID09PSAxKSB2c2hhZGVyICs9IFwiXFxudmFyeWluZyB2ZWMzIE5vcm1hbDtcXG5cIjtcbiAgICAgICAgaWYgKG9wdGlvbnMuc29mdCkgdnNoYWRlciArPSBcIlxcbnZhcnlpbmcgZmxvYXQgdkRlcHRoO1xcblwiO1xuXG4gICAgICAgIGNvbnN0IGZhY2VWUyA9IG9wdGlvbnMuY3VzdG9tRmFjZSA/IHNoYWRlckNodW5rcy5wYXJ0aWNsZV9jdXN0b21GYWNlVlMgOiBzaGFkZXJDaHVua3MucGFydGljbGVfYmlsbGJvYXJkVlM7XG5cbiAgICAgICAgaWYgKCFvcHRpb25zLnVzZUNwdSkge1xuICAgICAgICAgICAgdnNoYWRlciArPSBzaGFkZXJDaHVua3MucGFydGljbGVfaW5pdFZTO1xuICAgICAgICAgICAgdnNoYWRlciArPSAob3B0aW9ucy5wYWNrOCA/IHNoYWRlckNodW5rcy5wYXJ0aWNsZUlucHV0UmdiYThQUyA6IHNoYWRlckNodW5rcy5wYXJ0aWNsZUlucHV0RmxvYXRQUyk7XG4gICAgICAgICAgICBpZiAob3B0aW9ucy5zb2Z0ID4gMCkgdnNoYWRlciArPSBzaGFkZXJDaHVua3Muc2NyZWVuRGVwdGhQUztcbiAgICAgICAgICAgIHZzaGFkZXIgKz0gc2hhZGVyQ2h1bmtzLnBhcnRpY2xlVlM7XG4gICAgICAgICAgICBpZiAob3B0aW9ucy5sb2NhbFNwYWNlKSB2c2hhZGVyICs9IHNoYWRlckNodW5rcy5wYXJ0aWNsZV9sb2NhbFNoaWZ0VlM7XG4gICAgICAgICAgICBpZiAob3B0aW9ucy5hbmltVGV4KSB2c2hhZGVyICs9IHRoaXMuX2FuaW1UZXgob3B0aW9ucyk7XG4gICAgICAgICAgICBpZiAob3B0aW9ucy53cmFwKSB2c2hhZGVyICs9IHNoYWRlckNodW5rcy5wYXJ0aWNsZV93cmFwVlM7XG4gICAgICAgICAgICBpZiAob3B0aW9ucy5hbGlnblRvTW90aW9uKSB2c2hhZGVyICs9IHNoYWRlckNodW5rcy5wYXJ0aWNsZV9wb2ludEFsb25nVlM7XG4gICAgICAgICAgICB2c2hhZGVyICs9IG9wdGlvbnMubWVzaCA/IHNoYWRlckNodW5rcy5wYXJ0aWNsZV9tZXNoVlMgOiBmYWNlVlM7XG4gICAgICAgICAgICBpZiAob3B0aW9ucy5ub3JtYWwgPT09IDEpIHZzaGFkZXIgKz0gc2hhZGVyQ2h1bmtzLnBhcnRpY2xlX25vcm1hbFZTO1xuICAgICAgICAgICAgaWYgKG9wdGlvbnMubm9ybWFsID09PSAyKSB2c2hhZGVyICs9IHNoYWRlckNodW5rcy5wYXJ0aWNsZV9UQk5WUztcbiAgICAgICAgICAgIGlmIChvcHRpb25zLnN0cmV0Y2ggPiAwLjApIHZzaGFkZXIgKz0gc2hhZGVyQ2h1bmtzLnBhcnRpY2xlX3N0cmV0Y2hWUztcbiAgICAgICAgICAgIHZzaGFkZXIgKz0gc2hhZGVyQ2h1bmtzLnBhcnRpY2xlX2VuZFZTO1xuICAgICAgICAgICAgaWYgKG9wdGlvbnMuc29mdCA+IDApIHZzaGFkZXIgKz0gc2hhZGVyQ2h1bmtzLnBhcnRpY2xlX3NvZnRWUztcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGlmIChvcHRpb25zLnNvZnQgPiAwKSB2c2hhZGVyICs9IHNoYWRlckNodW5rcy5zY3JlZW5EZXB0aFBTO1xuICAgICAgICAgICAgdnNoYWRlciArPSBzaGFkZXJDaHVua3MucGFydGljbGVfY3B1VlM7XG4gICAgICAgICAgICBpZiAob3B0aW9ucy5sb2NhbFNwYWNlKSB2c2hhZGVyICs9IHNoYWRlckNodW5rcy5wYXJ0aWNsZV9sb2NhbFNoaWZ0VlM7XG4gICAgICAgICAgICBpZiAob3B0aW9ucy5hbmltVGV4KSB2c2hhZGVyICs9IHRoaXMuX2FuaW1UZXgob3B0aW9ucyk7XG4gICAgICAgICAgICAvLyBpZiAob3B0aW9ucy53cmFwKSB2c2hhZGVyICs9IHNoYWRlckNodW5rcy5wYXJ0aWNsZV93cmFwVlM7XG4gICAgICAgICAgICBpZiAob3B0aW9ucy5hbGlnblRvTW90aW9uKSB2c2hhZGVyICs9IHNoYWRlckNodW5rcy5wYXJ0aWNsZV9wb2ludEFsb25nVlM7XG4gICAgICAgICAgICB2c2hhZGVyICs9IG9wdGlvbnMubWVzaCA/IHNoYWRlckNodW5rcy5wYXJ0aWNsZV9tZXNoVlMgOiBmYWNlVlM7XG4gICAgICAgICAgICBpZiAob3B0aW9ucy5ub3JtYWwgPT09IDEpIHZzaGFkZXIgKz0gc2hhZGVyQ2h1bmtzLnBhcnRpY2xlX25vcm1hbFZTO1xuICAgICAgICAgICAgaWYgKG9wdGlvbnMubm9ybWFsID09PSAyKSB2c2hhZGVyICs9IHNoYWRlckNodW5rcy5wYXJ0aWNsZV9UQk5WUztcbiAgICAgICAgICAgIGlmIChvcHRpb25zLnN0cmV0Y2ggPiAwLjApIHZzaGFkZXIgKz0gc2hhZGVyQ2h1bmtzLnBhcnRpY2xlX3N0cmV0Y2hWUztcbiAgICAgICAgICAgIHZzaGFkZXIgKz0gc2hhZGVyQ2h1bmtzLnBhcnRpY2xlX2NwdV9lbmRWUztcbiAgICAgICAgICAgIGlmIChvcHRpb25zLnNvZnQgPiAwKSB2c2hhZGVyICs9IHNoYWRlckNodW5rcy5wYXJ0aWNsZV9zb2Z0VlM7XG4gICAgICAgIH1cbiAgICAgICAgdnNoYWRlciArPSBcIn1cXG5cIjtcblxuICAgICAgICBpZiAob3B0aW9ucy5ub3JtYWwgPiAwKSB7XG4gICAgICAgICAgICBpZiAob3B0aW9ucy5ub3JtYWwgPT09IDEpIHtcbiAgICAgICAgICAgICAgICBmc2hhZGVyICs9IFwiXFxudmFyeWluZyB2ZWMzIE5vcm1hbDtcXG5cIjtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAob3B0aW9ucy5ub3JtYWwgPT09IDIpIHtcbiAgICAgICAgICAgICAgICBmc2hhZGVyICs9IFwiXFxudmFyeWluZyBtYXQzIFBhcnRpY2xlTWF0O1xcblwiO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZnNoYWRlciArPSBcIlxcbnVuaWZvcm0gdmVjMyBsaWdodEN1YmVbNl07XFxuXCI7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG9wdGlvbnMuc29mdCkgZnNoYWRlciArPSBcIlxcbnZhcnlpbmcgZmxvYXQgdkRlcHRoO1xcblwiO1xuXG4gICAgICAgIGlmICgob3B0aW9ucy5ub3JtYWwgPT09IDApICYmIChvcHRpb25zLmZvZyA9PT0gXCJub25lXCIpKSBvcHRpb25zLnNyZ2IgPSBmYWxzZTsgLy8gZG9uJ3QgaGF2ZSB0byBwZXJmb3JtIGFsbCBnYW1tYSBjb252ZXJzaW9ucyB3aGVuIG5vIGxpZ2h0aW5nIGFuZCBmb2dnaW5nIGlzIHVzZWRcbiAgICAgICAgZnNoYWRlciArPSBzaGFkZXJDaHVua3MuZGVjb2RlUFM7XG4gICAgICAgIGZzaGFkZXIgKz0gZ2FtbWFDb2RlKG9wdGlvbnMuZ2FtbWEpO1xuICAgICAgICBmc2hhZGVyICs9IHRvbmVtYXBDb2RlKG9wdGlvbnMudG9uZU1hcCk7XG5cbiAgICAgICAgaWYgKG9wdGlvbnMuZm9nID09PSAnbGluZWFyJykge1xuICAgICAgICAgICAgZnNoYWRlciArPSBzaGFkZXJDaHVua3MuZm9nTGluZWFyUFM7XG4gICAgICAgIH0gZWxzZSBpZiAob3B0aW9ucy5mb2cgPT09ICdleHAnKSB7XG4gICAgICAgICAgICBmc2hhZGVyICs9IHNoYWRlckNodW5rcy5mb2dFeHBQUztcbiAgICAgICAgfSBlbHNlIGlmIChvcHRpb25zLmZvZyA9PT0gJ2V4cDInKSB7XG4gICAgICAgICAgICBmc2hhZGVyICs9IHNoYWRlckNodW5rcy5mb2dFeHAyUFM7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBmc2hhZGVyICs9IHNoYWRlckNodW5rcy5mb2dOb25lUFM7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAob3B0aW9ucy5ub3JtYWwgPT09IDIpIGZzaGFkZXIgKz0gXCJcXG51bmlmb3JtIHNhbXBsZXIyRCBub3JtYWxNYXA7XFxuXCI7XG4gICAgICAgIGlmIChvcHRpb25zLnNvZnQgPiAwKSBmc2hhZGVyICs9IHNoYWRlckNodW5rcy5zY3JlZW5EZXB0aFBTO1xuICAgICAgICBmc2hhZGVyICs9IHNoYWRlckNodW5rcy5wYXJ0aWNsZVBTO1xuICAgICAgICBpZiAob3B0aW9ucy5zb2Z0ID4gMCkgZnNoYWRlciArPSBzaGFkZXJDaHVua3MucGFydGljbGVfc29mdFBTO1xuICAgICAgICBpZiAob3B0aW9ucy5ub3JtYWwgPT09IDEpIGZzaGFkZXIgKz0gXCJcXG52ZWMzIG5vcm1hbCA9IE5vcm1hbDtcXG5cIjtcbiAgICAgICAgaWYgKG9wdGlvbnMubm9ybWFsID09PSAyKSBmc2hhZGVyICs9IHNoYWRlckNodW5rcy5wYXJ0aWNsZV9ub3JtYWxNYXBQUztcbiAgICAgICAgaWYgKG9wdGlvbnMubm9ybWFsID4gMCkgZnNoYWRlciArPSBvcHRpb25zLmhhbGZsYW1iZXJ0ID8gc2hhZGVyQ2h1bmtzLnBhcnRpY2xlX2hhbGZsYW1iZXJ0UFMgOiBzaGFkZXJDaHVua3MucGFydGljbGVfbGFtYmVydFBTO1xuICAgICAgICBpZiAob3B0aW9ucy5ub3JtYWwgPiAwKSBmc2hhZGVyICs9IHNoYWRlckNodW5rcy5wYXJ0aWNsZV9saWdodGluZ1BTO1xuICAgICAgICBpZiAob3B0aW9ucy5ibGVuZCA9PT0gQkxFTkRfTk9STUFMKSB7XG4gICAgICAgICAgICBmc2hhZGVyICs9IHNoYWRlckNodW5rcy5wYXJ0aWNsZV9ibGVuZE5vcm1hbFBTO1xuICAgICAgICB9IGVsc2UgaWYgKG9wdGlvbnMuYmxlbmQgPT09IEJMRU5EX0FERElUSVZFKSB7XG4gICAgICAgICAgICBmc2hhZGVyICs9IHNoYWRlckNodW5rcy5wYXJ0aWNsZV9ibGVuZEFkZFBTO1xuICAgICAgICB9IGVsc2UgaWYgKG9wdGlvbnMuYmxlbmQgPT09IEJMRU5EX01VTFRJUExJQ0FUSVZFKSB7XG4gICAgICAgICAgICBmc2hhZGVyICs9IHNoYWRlckNodW5rcy5wYXJ0aWNsZV9ibGVuZE11bHRpcGx5UFM7XG4gICAgICAgIH1cbiAgICAgICAgZnNoYWRlciArPSBzaGFkZXJDaHVua3MucGFydGljbGVfZW5kUFM7XG5cbiAgICAgICAgcmV0dXJuIFNoYWRlclV0aWxzLmNyZWF0ZURlZmluaXRpb24oZGV2aWNlLCB7XG4gICAgICAgICAgICB2ZXJ0ZXhDb2RlOiB2c2hhZGVyLFxuICAgICAgICAgICAgZnJhZ21lbnRDb2RlOiBmc2hhZGVyXG4gICAgICAgIH0pO1xuICAgIH1cbn07XG5cbmV4cG9ydCB7IHBhcnRpY2xlIH07XG4iXSwibmFtZXMiOlsicGFydGljbGUiLCJnZW5lcmF0ZUtleSIsIm9wdGlvbnMiLCJrZXkiLCJwcm9wIiwiaGFzT3duUHJvcGVydHkiLCJfYW5pbVRleCIsInZzaGFkZXIiLCJhbmltVGV4TG9vcCIsInNoYWRlckNodW5rcyIsInBhcnRpY2xlQW5pbUZyYW1lTG9vcFZTIiwicGFydGljbGVBbmltRnJhbWVDbGFtcFZTIiwicGFydGljbGVBbmltVGV4VlMiLCJjcmVhdGVTaGFkZXJEZWZpbml0aW9uIiwiZGV2aWNlIiwiZnNoYWRlciIsIm1lc2giLCJsb2NhbFNwYWNlIiwic2NyZWVuU3BhY2UiLCJhbmltVGV4Iiwibm9ybWFsIiwic29mdCIsImZhY2VWUyIsImN1c3RvbUZhY2UiLCJwYXJ0aWNsZV9jdXN0b21GYWNlVlMiLCJwYXJ0aWNsZV9iaWxsYm9hcmRWUyIsInVzZUNwdSIsInBhcnRpY2xlX2luaXRWUyIsInBhY2s4IiwicGFydGljbGVJbnB1dFJnYmE4UFMiLCJwYXJ0aWNsZUlucHV0RmxvYXRQUyIsInNjcmVlbkRlcHRoUFMiLCJwYXJ0aWNsZVZTIiwicGFydGljbGVfbG9jYWxTaGlmdFZTIiwid3JhcCIsInBhcnRpY2xlX3dyYXBWUyIsImFsaWduVG9Nb3Rpb24iLCJwYXJ0aWNsZV9wb2ludEFsb25nVlMiLCJwYXJ0aWNsZV9tZXNoVlMiLCJwYXJ0aWNsZV9ub3JtYWxWUyIsInBhcnRpY2xlX1RCTlZTIiwic3RyZXRjaCIsInBhcnRpY2xlX3N0cmV0Y2hWUyIsInBhcnRpY2xlX2VuZFZTIiwicGFydGljbGVfc29mdFZTIiwicGFydGljbGVfY3B1VlMiLCJwYXJ0aWNsZV9jcHVfZW5kVlMiLCJmb2ciLCJzcmdiIiwiZGVjb2RlUFMiLCJnYW1tYUNvZGUiLCJnYW1tYSIsInRvbmVtYXBDb2RlIiwidG9uZU1hcCIsImZvZ0xpbmVhclBTIiwiZm9nRXhwUFMiLCJmb2dFeHAyUFMiLCJmb2dOb25lUFMiLCJwYXJ0aWNsZVBTIiwicGFydGljbGVfc29mdFBTIiwicGFydGljbGVfbm9ybWFsTWFwUFMiLCJoYWxmbGFtYmVydCIsInBhcnRpY2xlX2hhbGZsYW1iZXJ0UFMiLCJwYXJ0aWNsZV9sYW1iZXJ0UFMiLCJwYXJ0aWNsZV9saWdodGluZ1BTIiwiYmxlbmQiLCJCTEVORF9OT1JNQUwiLCJwYXJ0aWNsZV9ibGVuZE5vcm1hbFBTIiwiQkxFTkRfQURESVRJVkUiLCJwYXJ0aWNsZV9ibGVuZEFkZFBTIiwiQkxFTkRfTVVMVElQTElDQVRJVkUiLCJwYXJ0aWNsZV9ibGVuZE11bHRpcGx5UFMiLCJwYXJ0aWNsZV9lbmRQUyIsIlNoYWRlclV0aWxzIiwiY3JlYXRlRGVmaW5pdGlvbiIsInZlcnRleENvZGUiLCJmcmFnbWVudENvZGUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFNQSxNQUFNQSxRQUFRLEdBQUc7RUFDYkMsV0FBVyxFQUFFLFVBQVVDLE9BQU8sRUFBRTtJQUM1QixJQUFJQyxHQUFHLEdBQUcsVUFBVSxDQUFBO0FBQ3BCLElBQUEsS0FBSyxNQUFNQyxJQUFJLElBQUlGLE9BQU8sRUFBRTtBQUN4QixNQUFBLElBQUlBLE9BQU8sQ0FBQ0csY0FBYyxDQUFDRCxJQUFJLENBQUMsRUFBRTtBQUM5QkQsUUFBQUEsR0FBRyxJQUFJRCxPQUFPLENBQUNFLElBQUksQ0FBQyxDQUFBO0FBQ3hCLE9BQUE7QUFDSixLQUFBO0FBQ0EsSUFBQSxPQUFPRCxHQUFHLENBQUE7R0FDYjtFQUVERyxRQUFRLEVBQUUsVUFBVUosT0FBTyxFQUFFO0lBQ3pCLElBQUlLLE9BQU8sR0FBRyxFQUFFLENBQUE7SUFDaEJBLE9BQU8sSUFBSUwsT0FBTyxDQUFDTSxXQUFXLEdBQUdDLFlBQVksQ0FBQ0MsdUJBQXVCLEdBQUdELFlBQVksQ0FBQ0Usd0JBQXdCLENBQUE7SUFDN0dKLE9BQU8sSUFBSUUsWUFBWSxDQUFDRyxpQkFBaUIsQ0FBQTtBQUN6QyxJQUFBLE9BQU9MLE9BQU8sQ0FBQTtHQUNqQjtBQUVETSxFQUFBQSxzQkFBc0IsRUFBRSxVQUFVQyxNQUFNLEVBQUVaLE9BQU8sRUFBRTtJQUMvQyxJQUFJYSxPQUFPLEdBQUcsb0JBQW9CLENBQUE7SUFDbEMsSUFB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
