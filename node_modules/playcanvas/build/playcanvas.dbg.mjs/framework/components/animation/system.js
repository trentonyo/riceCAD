/**
 * @license
 * PlayCanvas Engine v1.58.0 revision 6672f604c (DEBUG PROFILER)
 * Copyright 2011-2022 PlayCanvas Ltd. All rights reserved.
 */
import { Component } from '../component.js';
import { ComponentSystem } from '../system.js';
import { AnimationComponent } from './component.js';
import { AnimationComponentData } from './data.js';

const _schema = ['enabled'];

class AnimationComponentSystem extends ComponentSystem {
  constructor(app) {
    super(app);
    this.id = 'animation';
    this.ComponentType = AnimationComponent;
    this.DataType = AnimationComponentData;
    this.schema = _schema;
    this.on('beforeremove', this.onBeforeRemove, this);
    this.app.systems.on('update', this.onUpdate, this);
  }

  initializeComponentData(component, data, properties) {
    properties = ['activate', 'enabled', 'loop', 'speed', 'assets'];
    for (const property of properties) {
      if (data.hasOwnProperty(property)) {
        component[property] = data[property];
      }
    }
    super.initializeComponentData(component, data, _schema);
  }

  cloneComponent(entity, clone) {
    this.addComponent(clone, {});
    clone.animation.assets = entity.animation.assets.slice();
    clone.animation.speed = entity.animation.speed;
    clone.animation.loop = entity.animation.loop;
    clone.animation.activate = entity.animation.activate;
    clone.animation.enabled = entity.animation.enabled;
    const clonedAnimations = {};
    const animations = entity.animation.animations;
    for (const key in animations) {
      if (animations.hasOwnProperty(key)) {
        clonedAnimations[key] = animations[key];
      }
    }
    clone.animation.animations = clonedAnimations;
    const clonedAnimationsIndex = {};
    const animationsIndex = entity.animation.animationsIndex;
    for (const key in animationsIndex) {
      if (animationsIndex.hasOwnProperty(key)) {
        clonedAnimationsIndex[key] = animationsIndex[key];
      }
    }
    clone.animation.animationsIndex = clonedAnimationsIndex;
    return clone.animation;
  }

  onBeforeRemove(entity, component) {
    component.onBeforeRemove();
  }

  onUpdate(dt) {
    const components = this.store;
    for (const id in components) {
      if (components.hasOwnProperty(id)) {
        const component = components[id];
        if (component.data.enabled && component.entity.enabled) {
          component.entity.animation.update(dt);
        }
      }
    }
  }
  destroy() {
    super.destroy();
    this.app.systems.off('update', this.onUpdate, this);
  }
}
Component._buildAccessors(AnimationComponent.prototype, _schema);

export { AnimationComponentSystem };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3lzdGVtLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvZnJhbWV3b3JrL2NvbXBvbmVudHMvYW5pbWF0aW9uL3N5c3RlbS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQgfSBmcm9tICcuLi9jb21wb25lbnQuanMnO1xuaW1wb3J0IHsgQ29tcG9uZW50U3lzdGVtIH0gZnJvbSAnLi4vc3lzdGVtLmpzJztcblxuaW1wb3J0IHsgQW5pbWF0aW9uQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnQuanMnO1xuaW1wb3J0IHsgQW5pbWF0aW9uQ29tcG9uZW50RGF0YSB9IGZyb20gJy4vZGF0YS5qcyc7XG5cbi8qKiBAdHlwZWRlZiB7aW1wb3J0KCcuLi8uLi9hcHAtYmFzZS5qcycpLkFwcEJhc2V9IEFwcEJhc2UgKi9cbi8qKiBAdHlwZWRlZiB7aW1wb3J0KCcuLi8uLi9lbnRpdHkuanMnKS5FbnRpdHl9IEVudGl0eSAqL1xuXG5jb25zdCBfc2NoZW1hID0gW1xuICAgICdlbmFibGVkJ1xuXTtcblxuLyoqXG4gKiBUaGUgQW5pbWF0aW9uQ29tcG9uZW50U3lzdGVtIG1hbmFnZXMgY3JlYXRpbmcgYW5kIGRlbGV0aW5nIEFuaW1hdGlvbkNvbXBvbmVudHMuXG4gKlxuICogQGF1Z21lbnRzIENvbXBvbmVudFN5c3RlbVxuICovXG5jbGFzcyBBbmltYXRpb25Db21wb25lbnRTeXN0ZW0gZXh0ZW5kcyBDb21wb25lbnRTeXN0ZW0ge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZSBhbiBBbmltYXRpb25Db21wb25lbnRTeXN0ZW0gaW5zdGFuY2UuXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge0FwcEJhc2V9IGFwcCAtIFRoZSBhcHBsaWNhdGlvbiBtYW5hZ2luZyB0aGlzIHN5c3RlbS5cbiAgICAgKiBAaGlkZWNvbnN0cnVjdG9yXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoYXBwKSB7XG4gICAgICAgIHN1cGVyKGFwcCk7XG5cbiAgICAgICAgdGhpcy5pZCA9ICdhbmltYXRpb24nO1xuXG4gICAgICAgIHRoaXMuQ29tcG9uZW50VHlwZSA9IEFuaW1hdGlvbkNvbXBvbmVudDtcbiAgICAgICAgdGhpcy5EYXRhVHlwZSA9IEFuaW1hdGlvbkNvbXBvbmVudERhdGE7XG5cbiAgICAgICAgdGhpcy5zY2hlbWEgPSBfc2NoZW1hO1xuXG4gICAgICAgIHRoaXMub24oJ2JlZm9yZXJlbW92ZScsIHRoaXMub25CZWZvcmVSZW1vdmUsIHRoaXMpO1xuICAgICAgICB0aGlzLmFwcC5zeXN0ZW1zLm9uKCd1cGRhdGUnLCB0aGlzLm9uVXBkYXRlLCB0aGlzKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBDYWxsZWQgZHVyaW5nIHtAbGluayBDb21wb25lbnRTeXN0ZW0jYWRkQ29tcG9uZW50fSB0byBpbml0aWFsaXplIHRoZSBjb21wb25lbnQgZGF0YSBpbiB0aGVcbiAgICAgKiBzdG9yZS4gVGhpcyBjYW4gYmUgb3ZlcnJpZGRlbiBieSBkZXJpdmVkIENvbXBvbmVudCBTeXN0ZW1zIGFuZCBlaXRoZXIgY2FsbGVkIGJ5IHRoZSBkZXJpdmVkXG4gICAgICogU3lzdGVtIG9yIHJlcGxhY2VkIGVudGlyZWx5LlxuICAgICAqXG4gICAgICogQHBhcmFtIHtBbmltYXRpb25Db21wb25lbnR9IGNvbXBvbmVudCAtIFRoZSBjb21wb25lbnQgYmVpbmcgaW5pdGlhbGl6ZWQuXG4gICAgICogQHBhcmFtIHtvYmplY3R9IGRhdGEgLSBUaGUgZGF0YSBibG9jayB1c2VkIHRvIGluaXRpYWxpemUgdGhlIGNvbXBvbmVudC5cbiAgICAgKiBAcGFyYW0ge0FycmF5PHN0cmluZyB8IHtuYW1lOiBzdHJpbmcsIHR5cGU6IHN0cmluZ30+fSBwcm9wZXJ0aWVzIC0gVGhlIGFycmF5IG9mIHByb3BlcnR5IGRlc2NyaXB0b3JzIGZvciB0aGUgY29tcG9uZW50LlxuICAgICAqIEEgZGVzY3JpcHRvciBjYW4gYmUgZWl0aGVyIGEgcGxhaW4gcHJvcGVydHkgbmFtZSwgb3IgYW4gb2JqZWN0IHNwZWNpZnlpbmcgdGhlIG5hbWUgYW5kIHR5cGUuXG4gICAgICogQGlnbm9yZVxuICAgICAqL1xuICAgIGluaXRpYWxpemVDb21wb25lbnREYXRhKGNvbXBvbmVudCwgZGF0YSwgcHJvcGVydGllcykge1xuICAgICAgICAvLyBwcm9wZXJ0aWVzIG5lZWQgdG8gYmUgc2V0IGluIGEgc3BlY2lmaWMgb3JkZXIgZHVlIHRvIHNvbWUgc2V0dGVycyBpbiB0aGUgY29tcG9uZW50XG4gICAgICAgIC8vIGhhdmluZyBleHRyYSBsb2dpYy4gYGFzc2V0c2AgbmVlZCB0byBiZSBsYXN0IGFzIGl0IGNoZWNrcyBvdGhlciBwcm9wZXJ0aWVzXG4gICAgICAgIC8vIHRvIHNlZSBpZiBpdCBzaG91bGQgcGxheSB0aGUgYW5pbWF0aW9uXG4gICAgICAgIHByb3BlcnRpZXMgPSBbJ2FjdGl2YXRlJywgJ2VuYWJsZWQnLCAnbG9vcCcsICdzcGVlZCcsICdhc3NldHMnXTtcbiAgICAgICAgZm9yIChjb25zdCBwcm9wZXJ0eSBvZiBwcm9wZXJ0aWVzKSB7XG4gICAgICAgICAgICBpZiAoZGF0YS5oYXNPd25Qcm9wZXJ0eShwcm9wZXJ0eSkpIHtcbiAgICAgICAgICAgICAgICBjb21wb25lbnRbcHJvcGVydHldID0gZGF0YVtwcm9wZXJ0eV07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBzdXBlci5pbml0aWFsaXplQ29tcG9uZW50RGF0YShjb21wb25lbnQsIGRhdGEsIF9zY2hlbWEpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIENyZWF0ZSBhIGNsb25lIG9mIGNvbXBvbmVudC4gVGhpcyBjcmVhdGVzIGEgY29weSBvZiBhbGwgY29tcG9uZW50IGRhdGEgdmFyaWFibGVzLlxuICAgICAqXG4gICAgICogQHBhcmFtIHtFbnRpdHl9IGVudGl0eSAtIFRoZSBlbnRpdHkgdG8gY2xvbmUgdGhlIGNvbXBvbmVudCBmcm9tLlxuICAgICAqIEBwYXJhbSB7RW50aXR5fSBjbG9uZSAtIFRoZSBlbnRpdHkgdG8gY2xvbmUgdGhlIGNvbXBvbmVudCBpbnRvLlxuICAgICAqIEByZXR1cm5zIHtBbmltYXRpb25Db21wb25lbnR9IFRoZSBuZXdseSBjbG9uZWQgY29tcG9uZW50LlxuICAgICAqIEBpZ25vcmVcbiAgICAgKi9cbiAgICBjbG9uZUNvbXBvbmVudChlbnRpdHksIGNsb25lKSB7XG4gICAgICAgIHRoaXMuYWRkQ29tcG9uZW50KGNsb25lLCB7fSk7XG5cbiAgICAgICAgY2xvbmUuYW5pbWF0aW9uLmFzc2V0cyA9IGVudGl0eS5hbmltYXRpb24uYXNzZXRzLnNsaWNlKCk7XG4gICAgICAgIGNsb25lLmFuaW1hdGlvbi5zcGVlZCA9IGVudGl0eS5hbmltYXRpb24uc3BlZWQ7XG4gICAgICAgIGNsb25lLmFuaW1hdGlvbi5sb29wID0gZW50aXR5LmFuaW1hdGlvbi5sb29wO1xuICAgICAgICBjbG9uZS5hbmltYXRpb24uYWN0aXZhdGUgPSBlbnRpdHkuYW5pbWF0aW9uLmFjdGl2YXRlO1xuICAgICAgICBjbG9uZS5hbmltYXRpb24uZW5hYmxlZCA9IGVudGl0eS5hbmltYXRpb24uZW5hYmxlZDtcblxuICAgICAgICBjb25zdCBjbG9uZWRBbmltYXRpb25zID0ge307XG4gICAgICAgIGNvbnN0IGFuaW1hdGlvbnMgPSBlbnRpdHkuYW5pbWF0aW9uLmFuaW1hdGlvbnM7XG4gICAgICAgIGZvciAoY29uc3Qga2V5IGluIGFuaW1hdGlvbnMpIHtcbiAgICAgICAgICAgIGlmIChhbmltYXRpb25zLmhhc093blByb3BlcnR5KGtleSkpIHtcbiAgICAgICAgICAgICAgICBjbG9uZWRBbmltYXRpb25zW2tleV0gPSBhbmltYXRpb25zW2tleV07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgY2xvbmUuYW5pbWF0aW9uLmFuaW1hdGlvbnMgPSBjbG9uZWRBbmltYXRpb25zO1xuXG4gICAgICAgIGNvbnN0IGNsb25lZEFuaW1hdGlvbnNJbmRleCA9IHt9O1xuICAgICAgICBjb25zdCBhbmltYXRpb25zSW5kZXggPSBlbnRpdHkuYW5pbWF0aW9uLmFuaW1hdGlvbnNJbmRleDtcbiAgICAgICAgZm9yIChjb25zdCBrZXkgaW4gYW5pbWF0aW9uc0luZGV4KSB7XG4gICAgICAgICAgICBpZiAoYW5pbWF0aW9uc0luZGV4Lmhhc093blByb3BlcnR5KGtleSkpIHtcbiAgICAgICAgICAgICAgICBjbG9uZWRBbmltYXRpb25zSW5kZXhba2V5XSA9IGFuaW1hdGlvbnNJbmRleFtrZXldO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNsb25lLmFuaW1hdGlvbi5hbmltYXRpb25zSW5kZXggPSBjbG9uZWRBbmltYXRpb25zSW5kZXg7XG5cbiAgICAgICAgcmV0dXJuIGNsb25lLmFuaW1hdGlvbjtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBAcGFyYW0ge0VudGl0eX0gZW50aXR5IC0gVGhlIGVudGl0eSBoYXZpbmcgaXRzIGNvbXBvbmVudCByZW1vdmVkLlxuICAgICAqIEBwYXJhbSB7QW5pbWF0aW9uQ29tcG9uZW50fSBjb21wb25lbnQgLSBUaGUgY29tcG9uZW50IGJlaW5nIHJlbW92ZWQuXG4gICAgICogQHByaXZhdGVcbiAgICAgKi9cbiAgICBvbkJlZm9yZVJlbW92ZShlbnRpdHksIGNvbXBvbmVudCkge1xuICAgICAgICBjb21wb25lbnQub25CZWZvcmVSZW1vdmUoKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gZHQgLSBUaGUgdGltZSBkZWx0YSBzaW5jZSB0aGUgbGFzdCBmcmFtZS5cbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqL1xuICAgIG9uVXBkYXRlKGR0KSB7XG4gICAgICAgIGNvbnN0IGNvbXBvbmVudHMgPSB0aGlzLnN0b3JlO1xuXG4gICAgICAgIGZvciAoY29uc3QgaWQgaW4gY29tcG9uZW50cykge1xuICAgICAgICAgICAgaWYgKGNvbXBvbmVudHMuaGFzT3duUHJvcGVydHkoaWQpKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgY29tcG9uZW50ID0gY29tcG9uZW50c1tpZF07XG5cbiAgICAgICAgICAgICAgICBpZiAoY29tcG9uZW50LmRhdGEuZW5hYmxlZCAmJiBjb21wb25lbnQuZW50aXR5LmVuYWJsZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgY29tcG9uZW50LmVudGl0eS5hbmltYXRpb24udXBkYXRlKGR0KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBkZXN0cm95KCkge1xuICAgICAgICBzdXBlci5kZXN0cm95KCk7XG5cbiAgICAgICAgdGhpcy5hcHAuc3lzdGVtcy5vZmYoJ3VwZGF0ZScsIHRoaXMub25VcGRhdGUsIHRoaXMpO1xuICAgIH1cbn1cblxuQ29tcG9uZW50Ll9idWlsZEFjY2Vzc29ycyhBbmltYXRpb25Db21wb25lbnQucHJvdG90eXBlLCBfc2NoZW1hKTtcblxuZXhwb3J0IHsgQW5pbWF0aW9uQ29tcG9uZW50U3lzdGVtIH07XG4iXSwibmFtZXMiOlsiX3NjaGVtYSIsIkFuaW1hdGlvbkNvbXBvbmVudFN5c3RlbSIsIkNvbXBvbmVudFN5c3RlbSIsImNvbnN0cnVjdG9yIiwiYXBwIiwiaWQiLCJDb21wb25lbnRUeXBlIiwiQW5pbWF0aW9uQ29tcG9uZW50IiwiRGF0YVR5cGUiLCJBbmltYXRpb25Db21wb25lbnREYXRhIiwic2NoZW1hIiwib24iLCJvbkJlZm9yZVJlbW92ZSIsInN5c3RlbXMiLCJvblVwZGF0ZSIsImluaXRpYWxpemVDb21wb25lbnREYXRhIiwiY29tcG9uZW50IiwiZGF0YSIsInByb3BlcnRpZXMiLCJwcm9wZXJ0eSIsImhhc093blByb3BlcnR5IiwiY2xvbmVDb21wb25lbnQiLCJlbnRpdHkiLCJjbG9uZSIsImFkZENvbXBvbmVudCIsImFuaW1hdGlvbiIsImFzc2V0cyIsInNsaWNlIiwic3BlZWQiLCJsb29wIiwiYWN0aXZhdGUiLCJlbmFibGVkIiwiY2xvbmVkQW5pbWF0aW9ucyIsImFuaW1hdGlvbnMiLCJrZXkiLCJjbG9uZWRBbmltYXRpb25zSW5kZXgiLCJhbmltYXRpb25zSW5kZXgiLCJkdCIsImNvbXBvbmVudHMiLCJzdG9yZSIsInVwZGF0ZSIsImRlc3Ryb3kiLCJvZmYiLCJDb21wb25lbnQiLCJfYnVpbGRBY2Nlc3NvcnMiLCJwcm90b3R5cGUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFTQSxNQUFNQSxPQUFPLEdBQUcsQ0FDWixTQUFTLENBQ1osQ0FBQTs7QUFPRCxNQUFNQyx3QkFBd0IsU0FBU0MsZUFBZSxDQUFDO0VBT25EQyxXQUFXLENBQUNDLEdBQUcsRUFBRTtJQUNiLEtBQUssQ0FBQ0EsR0FBRyxDQUFDLENBQUE7SUFFVixJQUFJLENBQUNDLEVBQUUsR0FBRyxXQUFXLENBQUE7SUFFckIsSUFBSSxDQUFDQyxhQUFhLEdBQUdDLGtCQUFrQixDQUFBO0lBQ3ZDLElBQUksQ0FBQ0MsUUFBUSxHQUFHQyxzQkFBc0IsQ0FBQTtJQUV0QyxJQUFJLENBQUNDLE1BQU0sR0FBR1YsT0FBTyxDQUFBO0lBRXJCLElBQUksQ0FBQ1csRUFBRSxDQUFDLGNBQWMsRUFBRSxJQUFJLENBQUNDLGNBQWMsRUFBRSxJQUFJLENBQUMsQ0FBQTtBQUNsRCxJQUFBLElBQUksQ0FBQ1IsR0FBRyxDQUFDUyxPQUFPLENBQUNGLEVBQUUsQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDRyxRQUFRLEVBQUUsSUFBSSxDQUFDLENBQUE7QUFDdEQsR0FBQTs7QUFhQUMsRUFBQUEsdUJBQXVCLENBQUNDLFNBQVMsRUFBRUMsSUFBSSxFQUFFQyxVQUFVLEVBQUU7SUFJakRBLFVBQVUsR0FBRyxDQUFDLFVBQVUsRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFLE9BQU8sRUFBRSxRQUFRLENBQUMsQ0FBQTtBQUMvRCxJQUFBLEtBQUssTUFBTUMsUUFBUSxJQUFJRCxVQUFVLEVBQUU7QUFDL0IsTUFBQSxJQUFJRCxJQUFJLENBQUNHLGNBQWMsQ0FBQ0QsUUFBUSxDQUFDLEVBQUU7QUFDL0JILFFBQUFBLFNBQVMsQ0FBQ0csUUFB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
