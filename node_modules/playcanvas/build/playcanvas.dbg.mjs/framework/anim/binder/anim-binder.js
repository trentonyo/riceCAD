/**
 * @license
 * PlayCanvas Engine v1.58.0 revision 6672f604c (DEBUG PROFILER)
 * Copyright 2011-2022 PlayCanvas Ltd. All rights reserved.
 */
class AnimBinder {
  static joinPath(pathSegments, character) {
    character = character || '.';
    const escape = function escape(string) {
      return string.replace(/\\/g, '\\\\').replace(new RegExp('\\' + character, 'g'), '\\' + character);
    };
    return pathSegments.map(escape).join(character);
  }

  static splitPath(path, character) {
    character = character || '.';
    const result = [];
    let curr = "";
    let i = 0;
    while (i < path.length) {
      let c = path[i++];
      if (c === '\\' && i < path.length) {
        c = path[i++];
        if (c === '\\' || c === character) {
          curr += c;
        } else {
          curr += '\\' + c;
        }
      } else if (c === character) {
        result.push(curr);
        curr = '';
      } else {
        curr += c;
      }
    }
    if (curr.length > 0) {
      result.push(curr);
    }
    return result;
  }

  static encode(entityPath, component, propertyPath) {
    return `${Array.isArray(entityPath) ? entityPath.join('/') : entityPath}/${component}/${Array.isArray(propertyPath) ? propertyPath.join('/') : propertyPath}`;
  }

  resolve(path) {
    return null;
  }

  unresolve(path) {}

  update(deltaTime) {}
}

export { AnimBinder };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5pbS1iaW5kZXIuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9mcmFtZXdvcmsvYW5pbS9iaW5kZXIvYW5pbS1iaW5kZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqIEB0eXBlZGVmIHtpbXBvcnQoJy4uL2V2YWx1YXRvci9hbmltLXRhcmdldC5qcycpLkFuaW1UYXJnZXR9IEFuaW1UYXJnZXQgKi9cblxuLyoqXG4gKiBUaGlzIGludGVyZmFjZSBpcyB1c2VkIGJ5IHtAbGluayBBbmltRXZhbHVhdG9yfSB0byByZXNvbHZlIHVuaXF1ZSBhbmltYXRpb24gdGFyZ2V0IHBhdGggc3RyaW5nc1xuICogaW50byBpbnN0YW5jZXMgb2Yge0BsaW5rIEFuaW1UYXJnZXR9LlxuICpcbiAqIEBpZ25vcmVcbiAqL1xuY2xhc3MgQW5pbUJpbmRlciB7XG4gICAgLy8gam9pbiBhIGxpc3Qgb2YgcGF0aCBzZWdtZW50cyBpbnRvIGEgcGF0aCBzdHJpbmcgdXNpbmcgdGhlIGZ1bGwgc3RvcCBjaGFyYWN0ZXIuIElmIGFub3RoZXIgY2hhcmFjdGVyIGlzIHN1cHBsaWVkLFxuICAgIC8vIGl0IHdpbGwgam9pbiB1c2luZyB0aGF0IGNoYXJhY3RlciBpbnN0ZWFkXG4gICAgc3RhdGljIGpvaW5QYXRoKHBhdGhTZWdtZW50cywgY2hhcmFjdGVyKSB7XG4gICAgICAgIGNoYXJhY3RlciA9IGNoYXJhY3RlciB8fCAnLic7XG4gICAgICAgIGNvbnN0IGVzY2FwZSA9IGZ1bmN0aW9uIChzdHJpbmcpIHtcbiAgICAgICAgICAgIHJldHVybiBzdHJpbmcucmVwbGFjZSgvXFxcXC9nLCAnXFxcXFxcXFwnKS5yZXBsYWNlKG5ldyBSZWdFeHAoJ1xcXFwnICsgY2hhcmFjdGVyLCAnZycpLCAnXFxcXCcgKyBjaGFyYWN0ZXIpO1xuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gcGF0aFNlZ21lbnRzLm1hcChlc2NhcGUpLmpvaW4oY2hhcmFjdGVyKTtcbiAgICB9XG5cbiAgICAvLyBzcGxpdCBhIHBhdGggc3RyaW5nIGludG8gaXRzIHNlZ21lbnRzIGFuZCByZXNvbHZlIGNoYXJhY3RlciBlc2NhcGluZ1xuICAgIHN0YXRpYyBzcGxpdFBhdGgocGF0aCwgY2hhcmFjdGVyKSB7XG4gICAgICAgIGNoYXJhY3RlciA9IGNoYXJhY3RlciB8fCAnLic7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IFtdO1xuICAgICAgICBsZXQgY3VyciA9IFwiXCI7XG4gICAgICAgIGxldCBpID0gMDtcbiAgICAgICAgd2hpbGUgKGkgPCBwYXRoLmxlbmd0aCkge1xuICAgICAgICAgICAgbGV0IGMgPSBwYXRoW2krK107XG5cbiAgICAgICAgICAgIGlmIChjID09PSAnXFxcXCcgJiYgaSA8IHBhdGgubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgYyA9IHBhdGhbaSsrXTtcbiAgICAgICAgICAgICAgICBpZiAoYyA9PT0gJ1xcXFwnIHx8IGMgPT09IGNoYXJhY3Rlcikge1xuICAgICAgICAgICAgICAgICAgICBjdXJyICs9IGM7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgY3VyciArPSAnXFxcXCcgKyBjO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSBpZiAoYyA9PT0gY2hhcmFjdGVyKSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0LnB1c2goY3Vycik7XG4gICAgICAgICAgICAgICAgY3VyciA9ICcnO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBjdXJyICs9IGM7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGN1cnIubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgcmVzdWx0LnB1c2goY3Vycik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBDb252ZXJ0cyBhIGxvY2F0b3IgYXJyYXkgaW50byBpdHMgc3RyaW5nIHZlcnNpb24uXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge3N0cmluZ3xzdHJpbmdbXX0gZW50aXR5UGF0aCAtIFRoZSBlbnRpdHkgbG9jYXRpb24gaW4gdGhlIHNjZW5lIGRlZmluZWQgYXMgYW4gYXJyYXkgb3JcbiAgICAgKiBzdHJpbmcgcGF0aC5cbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gY29tcG9uZW50IC0gVGhlIGNvbXBvbmVudCBvZiB0aGUgZW50aXR5IHRoZSBwcm9wZXJ0eSBpcyBsb2NhdGVkIHVuZGVyLlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfHN0cmluZ1tdfSBwcm9wZXJ0eVBhdGggLSBUaGUgcHJvcGVydHkgbG9jYXRpb24gaW4gdGhlIGVudGl0eSBkZWZpbmVkIGFzIGFuIGFycmF5XG4gICAgICogb3Igc3RyaW5nIHBhdGguXG4gICAgICogQHJldHVybnMge3N0cmluZ30gVGhlIGxvY2F0b3IgZW5jb2RlZCBhcyBhIHN0cmluZy5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIC8vIHJldHVybnMgJ3Nwb3RMaWdodC9saWdodC9jb2xvci5yJ1xuICAgICAqIGVuY29kZShbJ3Nwb3RMaWdodCddLCAnbGlnaHQnLCBbJ2NvbG9yJywgJ3InXSk7XG4gICAgICovXG4gICAgc3RhdGljIGVuY29kZShlbnRpdHlQYXRoLCBjb21wb25lbnQsIHByb3BlcnR5UGF0aCkge1xuICAgICAgICByZXR1cm4gYCR7XG4gICAgICAgICAgICBBcnJheS5pc0FycmF5KGVudGl0eVBhdGgpID8gZW50aXR5UGF0aC5qb2luKCcvJykgOiBlbnRpdHlQYXRoXG4gICAgICAgIH0vJHtjb21wb25lbnR9LyR7XG4gICAgICAgICAgICBBcnJheS5pc0FycmF5KHByb3BlcnR5UGF0aCkgPyBwcm9wZXJ0eVBhdGguam9pbignLycpIDogcHJvcGVydHlQYXRoXG4gICAgICAgIH1gO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFJlc29sdmUgdGhlIHByb3ZpZGVkIHRhcmdldCBwYXRoIGFuZCByZXR1cm4gYW4gaW5zdGFuY2Ugb2Yge0BsaW5rIEFuaW1UYXJnZXR9IHdoaWNoIHdpbGxcbiAgICAgKiBoYW5kbGUgc2V0dGluZyB0aGUgdmFsdWUsIG9yIHJldHVybiBudWxsIGlmIG5vIHN1Y2ggdGFyZ2V0IGV4aXN0cy5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBwYXRoIC0gVGhlIGFuaW1hdGlvbiBjdXJ2ZSBwYXRoIHRvIHJlc29sdmUuXG4gICAgICogQHJldHVybnMge0FuaW1UYXJnZXR8bnVsbH0gLSBSZXR1cm5zIHRoZSB0YXJnZXQgaW5zdGFuY2Ugb24gc3VjY2VzcyBhbmQgbnVsbCBvdGhlcndpc2UuXG4gICAgICovXG4gICAgcmVzb2x2ZShwYXRoKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIENhbGxlZCB3aGVuIHRoZSB7QGxpbmsgQW5pbUV2YWx1YXRvcn0gbm8gbG9uZ2VyIGhhcyBhIGN1cnZlIGRyaXZpbmcgdGhlIGdpdmVuIGtleS5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBwYXRoIC0gVGhlIGFuaW1hdGlvbiBjdXJ2ZSBwYXRoIHdoaWNoIGlzIG5vIGxvbmdlciBkcml2ZW4uXG4gICAgICovXG4gICAgdW5yZXNvbHZlKHBhdGgpIHtcblxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIENhbGxlZCBieSB7QGxpbmsgQW5pbUV2YWx1YXRvcn0gb25jZSBhIGZyYW1lIGFmdGVyIGFuaW1hdGlvbiB1cGRhdGVzIGFyZSBkb25lLlxuICAgICAqXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IGRlbHRhVGltZSAtIEFtb3VudCBvZiB0aW1lIHRoYXQgcGFzc2VkIGluIHRoZSBjdXJyZW50IHVwZGF0ZS5cbiAgICAgKi9cbiAgICB1cGRhdGUoZGVsdGFUaW1lKSB7XG5cbiAgICB9XG59XG5cbmV4cG9ydCB7IEFuaW1CaW5kZXIgfTtcbiJdLCJuYW1lcyI6WyJBbmltQmluZGVyIiwiam9pblBhdGgiLCJwYXRoU2VnbWVudHMiLCJjaGFyYWN0ZXIiLCJlc2NhcGUiLCJzdHJpbmciLCJyZXBsYWNlIiwiUmVnRXhwIiwibWFwIiwiam9pbiIsInNwbGl0UGF0aCIsInBhdGgiLCJyZXN1bHQiLCJjdXJyIiwiaSIsImxlbmd0aCIsImMiLCJwdXNoIiwiZW5jb2RlIiwiZW50aXR5UGF0aCIsImNvbXBvbmVudCIsInByb3BlcnR5UGF0aCIsIkFycmF5IiwiaXNBcnJheSIsInJlc29sdmUiLCJ1bnJlc29sdmUiLCJ1cGRhdGUiLCJkZWx0YVRpbWUiXSwibWFwcGluZ3MiOiI7Ozs7O0FBUUEsTUFBTUEsVUFBVSxDQUFDO0FBR2IsRUFBQSxPQUFPQyxRQUFRLENBQUNDLFlBQVksRUFBRUMsU0FBUyxFQUFFO0lBQ3JDQSxTQUFTLEdBQUdBLFNBQVMsSUFBSSxHQUFHLENBQUE7QUFDNUIsSUFBQSxNQUFNQyxNQUFNLEdBQUcsU0FBVEEsTUFBTSxDQUFhQyxNQUFNLEVBQUU7TUFDN0IsT0FBT0EsTUFBTSxDQUFDQyxPQUFPLENBQUMsS0FBSyxFQUFFLE1BQU0sQ0FBQyxDQUFDQSxPQUFPLENBQUMsSUFBSUMsTUFBTSxDQUFDLElBQUksR0FBR0osU0FBUyxFQUFFLEdBQUcsQ0FBQyxFQUFFLElBQUksR0FBR0EsU0FBUyxDQUFDLENBQUE7S0FDcEcsQ0FBQTtJQUNELE9BQU9ELFlBQVksQ0FBQ00sR0FBRyxDQUFDSixNQUFNLENBQUMsQ0FBQ0ssSUFBSSxDQUFDTixTQUFTLENBQUMsQ0FBQTtBQUNuRCxHQUFBOztBQUdBLEVBQUEsT0FBT08sU0FBUyxDQUFDQyxJQUFJLEVBQUVSLFNBQVMsRUFBRTtJQUM5QkEsU0FBUyxHQUFHQSxTQUFTLElBQUksR0FBRyxDQUFBO0lBQzVCLE1BQU1TLE1BQU0sR0FBRyxFQUFFLENBQUE7SUFDakIsSUFBSUMsSUFBSSxHQUFHLEVBQUUsQ0FBQTtJQUNiLElBQUlDLENBQUMsR0FBRyxDQUFDLENBQUE7QUFDVCxJQUFBLE9BQU9BLENBQUMsR0FBR0gsSUFBSSxDQUFDSSxNQUFNLEVBQUU7QUFDcEIsTUFBQSxJQUFJQyxDQUFDLEdBQUdMLElBQUksQ0FBQ0csQ0FBQyxFQUFFLENBQUMsQ0FBQTtNQUVqQixJQUFJRSxDQUFDLEtBQUssSUFBSSxJQUFJRixDQUFDLEdBQUdILElBQUksQ0FBQ0ksTUFBTSxFQUFFO0FBQy9CQyxRQUFBQSxDQUFDLEdBQUdMLElBQUksQ0FBQ0csQ0FBQyxFQUFFLENBQUMsQ0FBQTtBQUNiLFFBQUEsSUFBSUUsQ0FBQyxLQUFLLElBQUksSUFBSUEsQ0FBQyxLQUFLYixTQUFTLEVBQUU7QUFDL0JVLFVBQUFBLElBQUksSUFBSUcsQ0FBQyxDQUFBO0FBQ2IsU0FBQyxNQUFNO1VBQ0hILElBQUksSUFBSSxJQUFJLEdBQUdHLENBQUMsQ0FBQTtBQUNwQixTQUFBO0FBQ0osT0FBQyxNQUFNLElBQUlBLENBQUMsS0FBS2IsU0FBUyxFQUFFO0FBQ3hCUyxRQUFBQSxNQUFNLENBQUNLLElBQUksQ0FBQ0osSUFBSSxDQUFDLENBQUE7QUFDakJBLFFBQUFBLElBQUksR0FBRyxFQUFFLENBQUE7QUFDYixPQUFDLE1BQU07QUFDSEEsUUFBQUEsSUFBSSxJQUFJRyxDQUFDLENBQUE7QUFDYixPQUFBO0FBQ0osS0FBQTtBQUNBLElBQUEsSUFBSUgsSUFBSSxDQUFDRSxNQUFNLEdBQUcsQ0FBQyxFQUFFO0FBQ2pCSCxNQUFBQSxNQUFNLENBQUNLLElBQUksQ0FBQ0osSUFBSSxDQUFDLENBQUE7QUFDckIsS0FBQTtBQUNBLElBQUEsT0FBT0QsTUFBTSxDQUFBO0FBQ2pCLEdBQUE7O0FBZUEsRUFBQSxPQUFPTSxNQUFNLENBQUNDLFVBQVUsRUFBRUMsU0FBUyxFQUFFQyxZQUFZLEVBQUU7QUFDL0MsSUFBQSxPQUFRLENBQ0pDLEVBQUFBLEtBQUssQ0FBQ0MsT0FBTyxDQUFDSixVQUFVLENBQUMsR0FBR0EsVUFBVSxDQUFDVixJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUdVLFVBQ3RELENBQUEsQ0FBQSxFQUFHQyxTQUFVLENBQUEsQ0FBQSxFQUNWRSxLQUFLLENBQUNDLE9BQU8sQ0FBQ0YsWUFBWSxDQUFDLEdBQUdBLFlBQVksQ0FBQ1osSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHWSxZQUMxRCxDQUFDLENBQUEsQ0FBQTtBQUNOLEdBQUE7O0VBU0FHLE9BQU8sQ0FBQ2IsSUFBSSxFQUFFO0FBQ1YsSUFBQSxPQUFPLElBQUksQ0FBQTtBQUNmLEdBQUE7O0VBT0FjLFNBQVMsQ0FBQ2QsSUFBSSxFQUFFLEVBRWhCOztFQU9BZSxNQUFNLENBQUNDLFNBQVMsRUFBRSxFQUVsQjtBQUNKOzs7OyJ9
